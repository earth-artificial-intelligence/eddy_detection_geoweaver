[{
  "history_id" : "cf8ny1ll2mi",
  "history_input" : "# All frequently used dependency are here\n\nimport os\nimport numpy as np\nimport logging as logger\n\nfrom datetime import datetime\nfrom matplotlib import pyplot as plt\nfrom py_eddy_tracker import data\nfrom py_eddy_tracker.dataset.grid import RegularGridDataset\nfrom copy import deepcopy\n",
  "history_output" : "Running",
  "history_begin_time" : 1676923910314,
  "history_end_time" : 1676923961276,
  "history_notes" : null,
  "history_process" : "0ajbp0",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "54b1h0dujl7",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1676923961277,
  "history_notes" : null,
  "history_process" : "0ps7es",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "b78rmpqisx0",
  "history_input" : "#Fequently used plotting functions\n\n\nimport os.path\nfrom dependency import plt\n\n\n\n\ndef start_axes(title):\n    fig = plt.figure(figsize=(13, 5))\n    ax = fig.add_axes([0.03, 0.03, 0.90, 0.94])\n    ax.set_aspect(\"equal\")\n    ax.set_title(title, weight=\"bold\")\n    return ax, fig\n\n\ndef update_axes(ax, mappable=None):\n    ax.grid()\n    if mappable:\n        plt.colorbar(mappable, cax=ax.figure.add_axes([0.94, 0.05, 0.01, 0.9]))\n\n\n\n\ndef plot_variable(grid_object, var_name, ax_title, **kwargs):\n    ax,fig = start_axes(ax_title)\n    m = grid_object.display(ax, var_name, **kwargs)\n    update_axes(ax, m)\n    ax.set_xlim(grid_object.x_c.min(), grid_object.x_c.max())\n    ax.set_ylim(grid_object.y_c.min(), grid_object.y_c.max())\n    return ax, m, fig\n\ndef save_fig_and_relesase_memory(ax, m, fig):\n    # TODO: change the function to account for a relevant name\n    fig.savefig( os.path.join(\"/home/chetana/ML_eddies/plots/\", \"0.png\"))\n    ax.cla()\n    plt.close('all')\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1676923916226,
  "history_end_time" : 1676923961283,
  "history_notes" : null,
  "history_process" : "ag4g86",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "x2p4ylh4xft",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1676923961284,
  "history_notes" : null,
  "history_process" : "nzlslh",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "ekye06lj3rb",
  "history_input" : "# Process data to generate ground truth using py-eddy-tracker\n\nfrom dependency import *\nfrom plot_utils import *\nfrom matplotlib.path import Path\nfrom py_eddy_tracker.poly import create_vertice\n\ndef generate_segmentation_mask_from_file(\n    gridded_ssh_file,\n    date,\n    ssh_var=\"adt\",\n    u_var=\"ugosa\",\n    v_var=\"vgosa\",\n    high_pass_wavelength_km=700,\n    x_offset=0,\n    y_offset=0,\n):\n    g, g_filtered, anticyclonic, cyclonic = identify_eddies(\n        gridded_ssh_file, date, ssh_var, u_var, v_var, high_pass_wavelength_km\n    )\n    mask = generate_segmentation_mask(\n        g_filtered, anticyclonic, cyclonic, x_offset, y_offset\n    )\n    var = g.grid(ssh_var)\n    var_filtered = g_filtered.grid(ssh_var)\n    return var, var_filtered, mask\n\n\ndef identify_eddies(\n    gridded_ssh_file,\n    date,\n    ssh_var=\"adt\",\n    u_var=\"ugosa\",\n    v_var=\"vgosa\",\n    high_pass_wavelength_km=700,\n):\n    g = RegularGridDataset(gridded_ssh_file, \"longitude\", \"latitude\")\n    g_filtered = deepcopy(g)  # make a copy so we don't alter the original\n    g_filtered.bessel_high_filter(ssh_var, high_pass_wavelength_km)\n    anticyclonic, cyclonic = g_filtered.eddy_identification(ssh_var, u_var, v_var, date)\n    return g, g_filtered, anticyclonic, cyclonic\n\n\ndef generate_segmentation_mask(\n    grid_dataset, anticyclonic, cyclonic, x_offset, y_offset, plot=False\n):\n    \"\"\"\n    Creates a numpy array to store the segmentation mask for the grid_dataset.\n    The mask contains classes 0: no eddy, 1: anticyclonic eddy, 2: cyclonic eddy.\n    \"\"\"\n    assert (\n        cyclonic.sign_legend == \"Cyclonic\"\n        and anticyclonic.sign_legend == \"Anticyclonic\"\n    ), \"Check whether the correct order for (anti)cyclonic observations were provided.\"\n    mask = np.zeros(grid_dataset.grid(\"adt\").shape, dtype=np.uint8)\n    # cyclonic should have the same: x_name = 'contour_lon_e', y_name = 'contour_lat_e'\n    x_name, y_name = anticyclonic.intern(False)\n    for eddy in anticyclonic:\n        x_list = (eddy[x_name] - x_offset) % 360 + x_offset\n        vertices = create_vertice(x_list, eddy[y_name] + y_offset)\n        i, j = Path(vertices).pixels_in(grid_dataset)\n        mask[i, j] = 1\n\n    for eddy in cyclonic:\n        x_list = (eddy[x_name] - x_offset) % 360 + x_offset\n        y_list = eddy[y_name] + y_offset\n        i, j = Path(create_vertice(x_list, y_list)).pixels_in(grid_dataset)\n        mask[i, j] = 2\n\n    if plot:\n        ax, m,fig = plot_variable(grid_dataset, mask, \"Segmentation Mask\", cmap=\"viridis\")\n    return mask",
  "history_output" : "",
  "history_begin_time" : 1676923909311,
  "history_end_time" : 1676923961287,
  "history_notes" : null,
  "history_process" : "jajowz",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "couglphc7oc",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1676923961289,
  "history_notes" : null,
  "history_process" : "zhsdwn",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "lg8tuxin56o",
  "history_input" : "# Generate ground truth on a global scale helper functions\n\nimport multiprocessing\n\nfrom ground_truth_utils import *\n\ndef generate_masks_in_parallel(\n    files,\n    dates,\n    ssh_var=\"adt\",\n    u_var=\"ugosa\",\n    v_var=\"vgosa\",\n    high_pass_wavelength_km=700,\n    x_offset=-180,\n    y_offset=0,\n    num_processes=8,\n    plot=False,\n    save=True,\n):\n    args = [\n        (file, date, ssh_var, u_var, v_var, high_pass_wavelength_km, x_offset, y_offset)\n        for file, date in zip(files, dates)\n    ]\n    pool = multiprocessing.Pool(processes=num_processes)\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\n\n    vars_ = []\n    vars_filtered = []\n    masks = []\n    for result in results:\n        vars_.append(result[0])\n        vars_filtered.append(result[1])\n        masks.append(result[2])\n\n    # concatenate list into single numpy array and return\n    masks = np.stack(masks, axis=0)\n    vars_ = np.stack(vars_, axis=0).astype(np.float32)\n    vars_filtered = np.stack(vars_filtered, axis=0).astype(np.float32)\n\n    if save:\n        # find common folder across all files\n        common_folder = os.path.commonpath(files)\n        years = sorted(set([date.year for date in dates]))\n        year_str = f\"{years[0]}\" if len(years) == 1 else f\"{min(years)}-{max(years)}\"\n        save_path = os.path.join(\n            common_folder, f\"global_pet_masks_with_{ssh_var}_{year_str}.npz\"\n        )\n        np.savez_compressed(\n            save_path,\n            masks=masks,\n            dates=dates,\n            var=vars_,\n            var_filtered=vars_filtered,\n        )\n        print(f\"Saved masks to {save_path}\")\n\n    return vars_, vars_filtered, masks\n\n\nfrom itertools import product\n\n\ndef get_dates_and_files(years, months, days, folder, file_pattern):\n    \"\"\"\n    Given a filename pattern and a list of years months and days,\n    fill in the filename pattern with the date and return\n    a list of filenames and a list of associated `datetime` objects.\n\n    Args:\n        years (list): list of years, e.g., [1993, 1994, 1995, 1996]\n        months (list): list of months, e.g., [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n        days (list): list of days, e.g., [1, 10, 20, 30] for every 10th day\n        folder (str): folder where the files are located\n        file_pattern (str): filename pattern, e.g.,\n            \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n    Returns:\n        files (list): full/absolute path to each netCDF file in the list of dates\n        dates (list): list of `datetime` objects formed from the combination of years, months and days\n    \"\"\"\n    dates, files = [], []\n    for y, m, d in product(years, months, days):  # cartesian product\n        try:\n            date = datetime(y, m, d)\n            file = os.path.join(folder, file_pattern.format(year=y, month=m, day=d))\n            dates.append(date)\n            files.append(file)\n        # catch ValueError thrown by datetime if date is not valid\n        except ValueError:\n            pass\n    years = f\"{years[0]}\" if len(years) == 1 else f\"{min(years)}-{max(years)}\"\n    print(f\"Found {len(dates)} files for {years}.\")\n    return dates, files",
  "history_output" : "",
  "history_begin_time" : 1676923908838,
  "history_end_time" : 1676923961291,
  "history_notes" : null,
  "history_process" : "zhsdwn",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "zlqxphdbirx",
  "history_input" : "# Take a subset of the masks and SSH map, and save to a compressed numpy (.npz) file\n\nfrom dependency import *\n\ndef subset_arrays(\n    masks,\n    var,\n    var_filtered,\n    dates,\n    lon_range,\n    lat_range,\n    resolution_deg,\n    plot=False,\n    ssh_var=\"adt\",\n    save_folder=None,\n):\n    \"\"\"\n    Subset the arrays to the given lon_range and lat_range.\n\n    Args:\n        masks (np.ndarray): Global eddy segmentation masks.\n            Can be masks from multiple dates concatenated into one array\n        var (np.ndarray): Global SSH value\n        var_filtered (np.ndarray): Global SSH value after high-pass filter\n        dates (list): List of `datetime` objects\n        lon_range (tuple): Longitude range to subset to (lon_start, lon_end)\n        lat_range (tuple): Latitude range to subset to (lat_start, lat_end)\n        resolution_deg (float): Resolution of the SSH map in degrees\n        plot (bool): Whether to plot a sample of the subsetted arrays\n        ssh_var (str): SSH variable name. Defaults to \"adt\". Only used if save_folder is not None.\n        save_folder (str): Folder to save the subsetted arrays to. Defaults to None.\n            If None, the arrays are not saved.\n\n    Returns:\n        mask_subset (np.ndarray): Subsetted masks\n        var_subset (np.ndarray): Subsetted var\n        var_filtered_subset (np.ndarray): Subsetted var_filtered\n        lon_subset (np.ndarray): Subsetted lon\n        lat_subset (np.ndarray): Subsetted lat\n    \"\"\"\n    lon_bounds = np.arange(-180, 180 + resolution_deg, resolution_deg)\n    lat_bounds = np.arange(-90, 90 + resolution_deg, resolution_deg)\n\n    # convert lon_range and lat_range to indices in the numpy arrays\n    lon_start, lon_end = lon_range\n    lat_start, lat_end = lat_range\n    lon_idx = lambda lon: np.argmin(np.abs(lon_bounds - lon))\n    lat_idx = lambda lat: np.argmin(np.abs(lat_bounds - lat))\n    lon_start_idx, lon_end_idx = lon_idx(lon_start), lon_idx(lon_end)\n    lat_start_idx, lat_end_idx = lat_idx(lat_start), lat_idx(lat_end)\n\n    mask_subset = masks[:, lon_start_idx:lon_end_idx, lat_start_idx:lat_end_idx]\n    var_subset = var[:, lon_start_idx:lon_end_idx, lat_start_idx:lat_end_idx]\n    var_filtered_subset = var_filtered[\n        :, lon_start_idx:lon_end_idx, lat_start_idx:lat_end_idx\n    ]\n    lon_subset = lon_bounds[lon_start_idx : lon_end_idx + 1]\n    lat_subset = lat_bounds[lat_start_idx : lat_end_idx + 1]\n    if plot:\n        fig, ax = plt.subplots()\n        if mask_subset.ndim == 3:\n            m = mask_subset[0]\n            v = var_subset[0]\n        elif mask_subset.ndim == 2:\n            m = mask_subset\n            v = var_subset\n        ax.pcolormesh(lon_subset, lat_subset, m.T, vmin=0, vmax=2, cmap=\"viridis\")\n        ax.set_xlim(lon_start, lon_end)\n        ax.set_ylim(lat_start, lat_end)\n        ax.set_aspect(abs((lon_end - lon_start) / (lat_start - lat_end)) * 1.0)\n\n    if save_folder is not None:\n        all_years = sorted(set([d.year for d in dates]))\n        year_str = (\n            f\"{all_years[0]}\"\n            if len(all_years) == 1\n            else f\"{min(all_years)}-{max(all_years)}\"\n        )\n        lat_str = lat_range_to_str(lat_range)\n        lon_str = lon_range_to_str(lon_range)\n        save_path = os.path.join(\n            save_folder,\n            f\"subset_pet_masks_with_{ssh_var}_{year_str}_lat{lat_str}_lon{lon_str}.npz\",\n        )\n        np.savez_compressed(\n            save_path,\n            masks=mask_subset,\n            dates=dates,\n            var=var_subset,\n            var_filtered=var_filtered_subset,\n            lon_subset=lon_subset,\n            lat_subset=lat_subset,\n        )\n        print(f\"Saved mask subset to {save_path}\")\n    return mask_subset, var_subset, var_filtered_subset, lon_subset, lat_subset\n\n\ndef lon_range_to_str(lon_range):\n    lon_start, lon_end = lon_range\n    lon_start = f\"{lon_start}E\" if lon_start >= 0 else f\"{abs(lon_start)}W\"\n    lon_end = f\"{lon_end}E\" if lon_end >= 0 else f\"{abs(lon_end)}W\"\n    return f\"{lon_start}-{lon_end}\"\n\n\ndef lat_range_to_str(lat_range):\n    lat_start, lat_end = lat_range\n    lat_start = f\"{lat_start}N\" if lat_start >= 0 else f\"{abs(lat_start)}S\"\n    lat_end = f\"{lat_end}N\" if lat_end >= 0 else f\"{abs(lat_end)}S\"\n    return f\"{lat_start}-{lat_end}\"",
  "history_output" : "Running",
  "history_begin_time" : 1676923909618,
  "history_end_time" : 1676923961292,
  "history_notes" : null,
  "history_process" : "g85teu",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "9m06qg7a04j",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1676923961292,
  "history_notes" : null,
  "history_process" : "q20jvx",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "bwie2ygoy89",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1676923961295,
  "history_notes" : null,
  "history_process" : "yddm1o",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "pz7xb7sk3nl",
  "history_input" : "from dependency import *\nfrom unzip_utils import *\nfrom get_data import *\n\n\nos.chdir('/home/chetana/')\ncurrent_working_dir = os.getcwd()\nprint(current_working_dir)\n\n# Directory names\nroot_dir_name = \"ML_eddies\"\ntrain_dir_name = \"cds_ssh_1998-2018_10day_interval\"\ntest_dir_name = \"cds_ssh_2019_10day_interval\"\n\n# Build dir paths\nroot_path = os.path.join(current_working_dir, root_dir_name)\ntrain_path = os.path.join(root_path, train_dir_name)\ntest_path= os.path.join(root_path, test_dir_name)\n\n# Check if dir exists\nis_root_dir_exists = os.path.exists(root_path)\nis_train_dir_exists = os.path.exists(train_path)\nis_test_dir_exists = os.path.exists(test_path)\n\n\ndef create_directory(directory_name):\n    try:\n        os.mkdir(directory_name)\n        logger.info(\"Successfully created folder\")\n    except:\n        logger.error(\"Something went wrong while creating folder\")\n\n\n\nif is_root_dir_exists != True:\n    print(root_path)\n    create_directory(root_path)\n    print(\"created:\",root_path)\n    create_directory(train_path)\n    create_directory(test_path)\n    train_file, test_file = download_data()\n\n    unzip_file( os.path.join(current_working_dir,train_file), train_path)\n    unzip_file( os.path.join(current_working_dir,test_file), test_path)\n\n\nif is_root_dir_exists and is_train_dir_exists != True:\n    create_directory(\"cds_ssh_1998-2018_10day_interval\")\n    train_file = download_train_data()\n    unzip_file( os.path.join(current_working_dir,train_file), train_path)\n\nif  is_root_dir_exists and is_test_dir_exists != True:\n    create_directory(\"cds_ssh_2019_10day_interval\")\n    test_file = download_test_data()\n    unzip_file( os.path.join(current_working_dir,test_file), test_path)\n\n",
  "history_output" : "/home/chetana\n/home/chetana/ML_eddies\nSuccessfully created folder\ncreated: /home/chetana/ML_eddies\nSuccessfully created folder\nSuccessfully created folder\n2023-02-20 20:12:06,005 INFO Welcome to the CDS\n2023-02-20 20:12:06,005 INFO Sending request to https://cds.climate.copernicus.eu/api/v2/resources/satellite-sea-level-global\n2023-02-20 20:12:06,326 INFO Request is queued\n2023-02-20 20:12:07,447 INFO Request is running\n2023-02-20 20:13:22,599 INFO Request is completed\n2023-02-20 20:13:22,600 INFO Downloading https://download-0021.copernicus-climate.eu/cache-compute-0021/cache/data3/dataset-satellite-sea-level-global-24b9ed11-a3d8-4a34-aeb1-dfe079770a7f.zip to train_data.zip (435.3M)\n\n  0%|                                                | 0.00/435M [00:00<?, ?B/s]\n  0%|                                     | 8.00k/435M [00:00<1:45:53, 71.8kB/s]\n  0%|                                        | 35.0k/435M [00:00<46:12, 165kB/s]\n  0%|                                        | 83.0k/435M [00:00<27:52, 273kB/s]\n  0%|                                         | 182k/435M [00:00<15:10, 501kB/s]\n  0%|                                         | 330k/435M [00:00<10:04, 754kB/s]\n  0%|                                        | 662k/435M [00:00<05:16, 1.44MB/s]\n  0%|                                        | 966k/435M [00:00<04:09, 1.83MB/s]\n  0%|                                       | 1.37M/435M [00:00<03:06, 2.44MB/s]\n  0%|▏                                      | 1.81M/435M [00:01<02:34, 2.93MB/s]\n  1%|▏                                      | 2.26M/435M [00:01<02:17, 3.31MB/s]\n  1%|▏                                      | 2.72M/435M [00:01<02:06, 3.58MB/s]\n  1%|▎                                      | 3.19M/435M [00:01<01:59, 3.81MB/s]\n  1%|▎                                      | 3.66M/435M [00:01<01:55, 3.91MB/s]\n  1%|▎                                      | 4.15M/435M [00:01<01:50, 4.08MB/s]\n  1%|▍                                      | 4.66M/435M [00:01<01:46, 4.24MB/s]\n  1%|▍                                      | 5.18M/435M [00:01<01:42, 4.41MB/s]\n  1%|▌                                      | 5.70M/435M [00:01<01:39, 4.55MB/s]\n  1%|▌                                      | 6.25M/435M [00:02<01:36, 4.66MB/s]\n  2%|▌                                      | 6.80M/435M [00:02<01:33, 4.78MB/s]\n  2%|▋                                      | 7.37M/435M [00:02<01:31, 4.90MB/s]\n  2%|▋                                      | 7.97M/435M [00:02<01:30, 4.98MB/s]\n  2%|▊                                      | 8.58M/435M [00:02<01:26, 5.19MB/s]\n  2%|▊                                      | 9.20M/435M [00:02<01:23, 5.38MB/s]\n  2%|▉                                      | 9.83M/435M [00:02<01:22, 5.42MB/s]\n  2%|▉                                      | 10.5M/435M [00:02<01:19, 5.57MB/s]\n  3%|▉                                      | 11.1M/435M [00:03<01:19, 5.59MB/s]\n  3%|█                                      | 11.8M/435M [00:03<01:17, 5.70MB/s]\n  3%|█                                      | 12.5M/435M [00:03<01:15, 5.86MB/s]\n  3%|█▏                                     | 13.2M/435M [00:03<01:12, 6.10MB/s]\n  3%|█▎                                     | 14.0M/435M [00:03<01:09, 6.34MB/s]\n  3%|█▎                                     | 14.7M/435M [00:03<01:08, 6.42MB/s]\n  4%|█▍                                     | 15.5M/435M [00:03<01:06, 6.64MB/s]\n  4%|█▍                                     | 16.3M/435M [00:03<01:03, 6.90MB/s]\n  4%|█▌                                     | 17.1M/435M [00:03<01:01, 7.10MB/s]\n  4%|█▌                                     | 17.9M/435M [00:04<01:00, 7.28MB/s]\n  4%|█▋                                     | 18.8M/435M [00:04<00:58, 7.52MB/s]\n  5%|█▊                                     | 19.7M/435M [00:04<00:57, 7.52MB/s]\n  5%|█▊                                     | 20.6M/435M [00:04<00:56, 7.73MB/s]\n  5%|█▉                                     | 21.5M/435M [00:04<00:55, 7.85MB/s]\n  5%|██                                     | 22.5M/435M [00:04<00:53, 8.08MB/s]\n  5%|██                                     | 23.4M/435M [00:04<00:52, 8.27MB/s]\n  6%|██▏                                    | 24.5M/435M [00:04<00:49, 8.63MB/s]\n  6%|██▎                                    | 25.5M/435M [00:04<00:47, 8.98MB/s]\n  6%|██▍                                    | 26.6M/435M [00:05<00:46, 9.32MB/s]\n  6%|██▍                                    | 27.7M/435M [00:05<00:44, 9.63MB/s]\n  7%|██▌                                    | 28.8M/435M [00:05<00:42, 9.96MB/s]\n  7%|██▋                                    | 30.0M/435M [00:05<00:41, 10.2MB/s]\n  7%|██▊                                    | 31.1M/435M [00:05<00:40, 10.5MB/s]\n  7%|██▉                                    | 32.4M/435M [00:05<00:39, 10.8MB/s]\n  8%|███                                    | 33.6M/435M [00:05<00:37, 11.1MB/s]\n  8%|███                                    | 34.9M/435M [00:05<00:36, 11.4MB/s]\n  8%|███▏                                   | 36.2M/435M [00:05<00:35, 11.7MB/s]\n  9%|███▎                                   | 37.5M/435M [00:06<00:35, 11.8MB/s]\n  9%|███▍                                   | 38.9M/435M [00:06<00:33, 12.5MB/s]\n  9%|███▌                                   | 40.3M/435M [00:06<00:32, 12.7MB/s]\n 10%|███▋                                   | 41.8M/435M [00:06<00:31, 13.1MB/s]\n 10%|███▉                                   | 43.3M/435M [00:06<00:30, 13.4MB/s]\n 10%|████                                   | 44.8M/435M [00:06<00:29, 13.8MB/s]\n 11%|████▏                                  | 46.4M/435M [00:06<00:28, 14.1MB/s]\n 11%|████▎                                  | 48.0M/435M [00:06<00:28, 14.4MB/s]\n 11%|████▍                                  | 49.7M/435M [00:06<00:27, 14.7MB/s]\n 12%|████▌                                  | 51.4M/435M [00:07<00:26, 15.2MB/s]\n 12%|████▊                                  | 53.2M/435M [00:07<00:25, 15.6MB/s]\n 13%|████▉                                  | 55.0M/435M [00:07<00:24, 16.1MB/s]\n 13%|█████                                  | 56.9M/435M [00:07<00:24, 16.4MB/s]\n 14%|█████▎                                 | 58.8M/435M [00:07<00:23, 16.8MB/s]\n 14%|█████▍                                 | 60.9M/435M [00:07<00:22, 17.4MB/s]\n 14%|█████▋                                 | 62.9M/435M [00:07<00:21, 18.1MB/s]\n 15%|█████▊                                 | 65.1M/435M [00:07<00:20, 18.5MB/s]\n 15%|██████                                 | 67.3M/435M [00:08<00:20, 19.2MB/s]\n 16%|██████▏                                | 69.5M/435M [00:08<00:19, 19.8MB/s]\n 17%|██████▍                                | 71.9M/435M [00:08<00:18, 20.5MB/s]\n 17%|██████▋                                | 74.3M/435M [00:08<00:17, 21.2MB/s]\n 18%|██████▉                                | 76.8M/435M [00:08<00:17, 21.8MB/s]\n 18%|███████                                | 79.3M/435M [00:08<00:16, 22.5MB/s]\n 19%|███████▎                               | 81.8M/435M [00:08<00:16, 22.8MB/s]\n 19%|███████▌                               | 84.1M/435M [00:08<00:16, 22.6MB/s]\n 20%|███████▊                               | 86.8M/435M [00:08<00:15, 23.3MB/s]\n 21%|████████                               | 89.4M/435M [00:09<00:15, 23.8MB/s]\n 21%|████████▏                              | 92.1M/435M [00:09<00:14, 24.1MB/s]\n 22%|████████▍                              | 94.7M/435M [00:09<00:14, 24.4MB/s]\n 22%|████████▋                              | 97.4M/435M [00:09<00:14, 24.7MB/s]\n 23%|█████████▏                              | 100M/435M [00:09<00:14, 24.8MB/s]\n 24%|█████████▍                              | 103M/435M [00:09<00:13, 24.9MB/s]\n 24%|█████████▋                              | 105M/435M [00:09<00:13, 24.8MB/s]\n 25%|█████████▉                              | 108M/435M [00:09<00:13, 25.7MB/s]\n 25%|██████████▏                             | 111M/435M [00:09<00:13, 25.7MB/s]\n 26%|██████████▍                             | 114M/435M [00:10<00:13, 25.5MB/s]\n 27%|██████████▋                             | 116M/435M [00:10<00:13, 25.5MB/s]\n 27%|██████████▉                             | 119M/435M [00:10<00:12, 25.7MB/s]\n 28%|███████████▏                            | 122M/435M [00:10<00:13, 25.2MB/s]\n 29%|███████████▍                            | 125M/435M [00:10<00:12, 25.5MB/s]\n 29%|███████████▋                            | 127M/435M [00:10<00:12, 25.8MB/s]\n 30%|███████████▉                            | 130M/435M [00:10<00:12, 25.4MB/s]\n 31%|████████████▏                           | 133M/435M [00:10<00:12, 25.7MB/s]\n 31%|████████████▍                           | 136M/435M [00:10<00:12, 26.0MB/s]\n 32%|████████████▋                           | 138M/435M [00:11<00:11, 26.1MB/s]\n 32%|████████████▉                           | 141M/435M [00:11<00:11, 26.2MB/s]\n 33%|█████████████▏                          | 144M/435M [00:11<00:11, 26.3MB/s]\n 34%|█████████████▍                          | 147M/435M [00:11<00:11, 26.3MB/s]\n 34%|█████████████▊                          | 150M/435M [00:11<00:11, 26.5MB/s]\n 35%|██████████████                          | 153M/435M [00:11<00:11, 26.3MB/s]\n 36%|██████████████▎                         | 155M/435M [00:11<00:11, 26.3MB/s]\n 36%|██████████████▌                         | 158M/435M [00:11<00:10, 26.4MB/s]\n 37%|██████████████▊                         | 161M/435M [00:11<00:10, 26.4MB/s]\n 38%|███████████████                         | 164M/435M [00:12<00:10, 26.5MB/s]\n 38%|███████████████▎                        | 166M/435M [00:12<00:10, 25.8MB/s]\n 39%|███████████████▌                        | 169M/435M [00:12<00:10, 26.3MB/s]\n 39%|███████████████▊                        | 172M/435M [00:12<00:11, 25.1MB/s]\n 40%|███████████████▉                        | 174M/435M [00:12<00:10, 25.0MB/s]\n 41%|████████████████▏                       | 176M/435M [00:12<00:10, 24.9MB/s]\n 41%|████████████████▍                       | 179M/435M [00:12<00:10, 24.9MB/s]\n 42%|████████████████▋                       | 181M/435M [00:12<00:10, 25.1MB/s]\n 42%|████████████████▉                       | 184M/435M [00:12<00:10, 26.1MB/s]\n 43%|█████████████████▏                      | 187M/435M [00:12<00:10, 25.6MB/s]\n 43%|█████████████████▎                      | 189M/435M [00:13<00:10, 25.5MB/s]\n 44%|█████████████████▌                      | 192M/435M [00:13<00:09, 25.7MB/s]\n 45%|█████████████████▊                      | 194M/435M [00:13<00:09, 26.0MB/s]\n 45%|██████████████████▏                     | 197M/435M [00:13<00:09, 26.2MB/s]\n 46%|██████████████████▍                     | 200M/435M [00:13<00:09, 26.2MB/s]\n 47%|██████████████████▋                     | 203M/435M [00:13<00:09, 26.4MB/s]\n 47%|██████████████████▉                     | 206M/435M [00:13<00:09, 26.5MB/s]\n 48%|███████████████████▏                    | 209M/435M [00:13<00:08, 26.5MB/s]\n 49%|███████████████████▍                    | 211M/435M [00:13<00:08, 26.6MB/s]\n 49%|███████████████████▋                    | 214M/435M [00:14<00:08, 26.5MB/s]\n 50%|███████████████████▉                    | 217M/435M [00:14<00:08, 26.6MB/s]\n 50%|████████████████████▏                   | 220M/435M [00:14<00:08, 26.5MB/s]\n 51%|████████████████████▍                   | 223M/435M [00:14<00:08, 26.4MB/s]\n 52%|████████████████████▋                   | 225M/435M [00:14<00:08, 26.4MB/s]\n 52%|████████████████████▉                   | 228M/435M [00:14<00:08, 26.8MB/s]\n 53%|█████████████████████▏                  | 230M/435M [00:14<00:08, 25.8MB/s]\n 53%|█████████████████████▍                  | 233M/435M [00:14<00:10, 19.5MB/s]\n 54%|█████████████████████▌                  | 235M/435M [00:15<00:19, 10.8MB/s]\n 54%|█████████████████████▋                  | 236M/435M [00:15<00:21, 9.86MB/s]\n 55%|█████████████████████▉                  | 238M/435M [00:15<00:18, 11.4MB/s]\n 55%|██████████████████████                  | 240M/435M [00:15<00:17, 11.5MB/s]\n 55%|██████████████████████▏                 | 241M/435M [00:15<00:16, 12.0MB/s]\n 56%|██████████████████████▎                 | 243M/435M [00:16<00:15, 12.9MB/s]\n 56%|██████████████████████▍                 | 244M/435M [00:16<00:20, 9.74MB/s]\n 56%|██████████████████████▌                 | 246M/435M [00:16<00:20, 9.89MB/s]\n 57%|██████████████████████▋                 | 247M/435M [00:16<00:19, 10.2MB/s]\n 57%|██████████████████████▊                 | 248M/435M [00:16<00:21, 8.97MB/s]\n 57%|██████████████████████▊                 | 249M/435M [00:16<00:24, 8.07MB/s]\n 57%|██████████████████████▉                 | 250M/435M [00:17<00:29, 6.53MB/s]\n 57%|██████████████████████▉                 | 250M/435M [00:17<00:29, 6.49MB/s]\n 58%|███████████████████████                 | 251M/435M [00:17<00:43, 4.45MB/s]\n 58%|███████████████████████                 | 252M/435M [00:17<00:39, 4.84MB/s]\n 58%|███████████████████████▏                | 252M/435M [00:17<00:48, 3.99MB/s]\n 58%|███████████████████████▏                | 253M/435M [00:17<00:46, 4.10MB/s]\n 58%|███████████████████████▎                | 253M/435M [00:18<00:52, 3.64MB/s]\n 58%|███████████████████████▎                | 253M/435M [00:18<00:56, 3.39MB/s]\n 58%|███████████████████████▎                | 254M/435M [00:18<00:56, 3.37MB/s]\n 58%|███████████████████████▎                | 254M/435M [00:18<01:05, 2.90MB/s]\n 58%|███████████████████████▍                | 254M/435M [00:18<01:05, 2.88MB/s]\n 59%|███████████████████████▍                | 255M/435M [00:18<01:06, 2.84MB/s]\n 59%|███████████████████████▍                | 255M/435M [00:19<01:31, 2.07MB/s]\n 59%|███████████████████████▍                | 255M/435M [00:19<01:30, 2.08MB/s]\n 59%|███████████████████████▍                | 256M/435M [00:19<01:13, 2.57MB/s]\n 59%|███████████████████████▌                | 256M/435M [00:19<01:14, 2.54MB/s]\n 59%|███████████████████████▌                | 256M/435M [00:19<01:15, 2.50MB/s]\n 59%|███████████████████████▌                | 256M/435M [00:19<01:27, 2.14MB/s]\n 59%|███████████████████████▌                | 257M/435M [00:19<01:28, 2.12MB/s]\n 59%|███████████████████████▌                | 257M/435M [00:19<01:29, 2.10MB/s]\n 59%|███████████████████████▋                | 257M/435M [00:20<01:30, 2.07MB/s]\n 59%|███████████████████████▋                | 257M/435M [00:20<01:30, 2.06MB/s]\n 59%|███████████████████████▋                | 258M/435M [00:20<01:29, 2.08MB/s]\n 59%|███████████████████████▋                | 258M/435M [00:20<01:28, 2.10MB/s]\n 59%|███████████████████████▋                | 258M/435M [00:20<01:27, 2.13MB/s]\n 59%|███████████████████████▋                | 258M/435M [00:20<01:27, 2.11MB/s]\n 59%|███████████████████████▊                | 259M/435M [00:20<01:26, 2.14MB/s]\n 59%|███████████████████████▊                | 259M/435M [00:20<01:39, 1.85MB/s]\n 60%|███████████████████████▊                | 259M/435M [00:21<02:08, 1.43MB/s]\n 60%|███████████████████████▊                | 259M/435M [00:21<01:33, 1.98MB/s]\n 60%|███████████████████████▊                | 260M/435M [00:21<01:38, 1.87MB/s]\n 60%|███████████████████████▉                | 260M/435M [00:21<01:57, 1.57MB/s]\n 60%|███████████████████████▉                | 260M/435M [00:21<01:59, 1.54MB/s]\n 60%|███████████████████████▉                | 260M/435M [00:21<02:18, 1.33MB/s]\n 60%|███████████████████████▉                | 260M/435M [00:22<02:22, 1.29MB/s]\n 60%|███████████████████████▉                | 260M/435M [00:22<02:25, 1.26MB/s]\n 60%|███████████████████████▉                | 261M/435M [00:22<02:26, 1.25MB/s]\n 60%|███████████████████████▉                | 261M/435M [00:22<02:26, 1.25MB/s]\n 60%|███████████████████████▉                | 261M/435M [00:22<02:23, 1.27MB/s]\n 60%|███████████████████████▉                | 261M/435M [00:22<02:24, 1.27MB/s]\n 60%|███████████████████████▉                | 261M/435M [00:22<02:21, 1.29MB/s]\n 60%|████████████████████████                | 261M/435M [00:22<02:20, 1.30MB/s]\n 60%|████████████████████████                | 261M/435M [00:22<02:21, 1.29MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:20, 1.30MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:22, 1.28MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:20, 1.29MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:19, 1.30MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:18, 1.31MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:17, 1.32MB/s]\n 60%|████████████████████████                | 262M/435M [00:23<02:17, 1.32MB/s]\n 60%|████████████████████████▏               | 263M/435M [00:23<02:16, 1.32MB/s]\n 60%|████████████████████████▏               | 263M/435M [00:24<02:16, 1.33MB/s]\n 60%|████████████████████████▏               | 263M/435M [00:24<02:16, 1.33MB/s]\n 60%|████████████████████████▏               | 263M/435M [00:24<02:16, 1.33MB/s]\n 60%|████████████████████████▏               | 263M/435M [00:24<02:15, 1.33MB/s]\n 60%|████████████████████████▏               | 263M/435M [00:24<02:15, 1.33MB/s]\n 61%|████████████████████████▏               | 263M/435M [00:24<02:15, 1.33MB/s]\n 61%|████████████████████████▏               | 264M/435M [00:24<02:16, 1.32MB/s]\n 61%|████████████████████████▏               | 264M/435M [00:24<02:16, 1.32MB/s]\n 61%|████████████████████████▏               | 264M/435M [00:24<02:16, 1.32MB/s]\n 61%|████████████████████████▎               | 264M/435M [00:25<02:15, 1.32MB/s]\n 61%|████████████████████████▎               | 264M/435M [00:25<02:15, 1.32MB/s]\n 61%|████████████████████████▎               | 264M/435M [00:25<02:15, 1.33MB/s]\n 61%|████████████████████████▎               | 264M/435M [00:25<02:12, 1.35MB/s]\n 61%|████████████████████████▎               | 265M/435M [00:25<02:13, 1.34MB/s]\n 61%|████████████████████████▎               | 265M/435M [00:25<02:14, 1.33MB/s]\n 61%|████████████████████████▎               | 265M/435M [00:25<02:12, 1.35MB/s]\n 61%|████████████████████████▎               | 265M/435M [00:25<02:12, 1.35MB/s]\n 61%|████████████████████████▎               | 265M/435M [00:25<02:11, 1.36MB/s]\n 61%|████████████████████████▎               | 265M/435M [00:26<02:09, 1.37MB/s]\n 61%|████████████████████████▍               | 265M/435M [00:26<02:08, 1.38MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:08, 1.39MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:07, 1.39MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:07, 1.40MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:06, 1.40MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:04, 1.42MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:04, 1.42MB/s]\n 61%|████████████████████████▍               | 266M/435M [00:26<02:03, 1.43MB/s]\n 61%|████████████████████████▍               | 267M/435M [00:27<02:02, 1.45MB/s]\n 61%|████████████████████████▌               | 267M/435M [00:27<02:03, 1.44MB/s]\n 61%|████████████████████████▌               | 267M/435M [00:27<02:01, 1.45MB/s]\n 61%|████████████████████████▌               | 267M/435M [00:27<02:00, 1.46MB/s]\n 61%|████████████████████████▌               | 267M/435M [00:27<02:00, 1.46MB/s]\n 61%|████████████████████████▌               | 267M/435M [00:27<01:58, 1.48MB/s]\n 61%|████████████████████████▌               | 268M/435M [00:27<01:58, 1.48MB/s]\n 61%|████████████████████████▌               | 268M/435M [00:27<01:58, 1.48MB/s]\n 62%|████████████████████████▌               | 268M/435M [00:27<01:58, 1.49MB/s]\n 62%|████████████████████████▋               | 268M/435M [00:28<01:57, 1.49MB/s]\n 62%|████████████████████████▋               | 268M/435M [00:28<01:57, 1.49MB/s]\n 62%|████████████████████████▋               | 268M/435M [00:28<01:56, 1.51MB/s]\n 62%|████████████████████████▋               | 269M/435M [00:28<01:55, 1.52MB/s]\n 62%|████████████████████████▋               | 269M/435M [00:28<01:54, 1.53MB/s]\n 62%|████████████████████████▋               | 269M/435M [00:28<01:52, 1.56MB/s]\n 62%|████████████████████████▋               | 269M/435M [00:28<01:50, 1.58MB/s]\n 62%|████████████████████████▋               | 269M/435M [00:28<01:49, 1.59MB/s]\n 62%|████████████████████████▊               | 269M/435M [00:28<01:48, 1.61MB/s]\n 62%|████████████████████████▊               | 270M/435M [00:29<01:46, 1.63MB/s]\n 62%|████████████████████████▊               | 270M/435M [00:29<01:44, 1.65MB/s]\n 62%|████████████████████████▊               | 270M/435M [00:29<01:42, 1.68MB/s]\n 62%|████████████████████████▊               | 270M/435M [00:29<01:39, 1.73MB/s]\n 62%|████████████████████████▊               | 270M/435M [00:29<01:38, 1.76MB/s]\n 62%|████████████████████████▊               | 271M/435M [00:29<01:36, 1.79MB/s]\n 62%|████████████████████████▉               | 271M/435M [00:29<01:34, 1.83MB/s]\n 62%|████████████████████████▉               | 271M/435M [00:29<01:31, 1.87MB/s]\n 62%|████████████████████████▉               | 271M/435M [00:29<01:30, 1.91MB/s]\n 62%|████████████████████████▉               | 271M/435M [00:30<01:27, 1.96MB/s]\n 62%|████████████████████████▉               | 272M/435M [00:30<01:26, 1.99MB/s]\n 62%|████████████████████████▉               | 272M/435M [00:30<01:24, 2.03MB/s]\n 62%|████████████████████████▉               | 272M/435M [00:30<01:22, 2.07MB/s]\n 63%|█████████████████████████               | 272M/435M [00:30<01:21, 2.11MB/s]\n 63%|█████████████████████████               | 272M/435M [00:30<01:18, 2.16MB/s]\n 63%|█████████████████████████               | 273M/435M [00:30<01:16, 2.22MB/s]\n 63%|█████████████████████████               | 273M/435M [00:30<01:15, 2.27MB/s]\n 63%|█████████████████████████               | 273M/435M [00:30<01:12, 2.33MB/s]\n 63%|█████████████████████████▏              | 274M/435M [00:31<01:11, 2.37MB/s]\n 63%|█████████████████████████▏              | 274M/435M [00:31<01:09, 2.44MB/s]\n 63%|█████████████████████████▏              | 274M/435M [00:31<01:07, 2.50MB/s]\n 63%|█████████████████████████▏              | 274M/435M [00:31<01:05, 2.56MB/s]\n 63%|█████████████████████████▏              | 275M/435M [00:31<01:03, 2.63MB/s]\n 63%|█████████████████████████▎              | 275M/435M [00:31<01:02, 2.71MB/s]\n 63%|█████████████████████████▎              | 275M/435M [00:31<01:00, 2.78MB/s]\n 63%|█████████████████████████▎              | 276M/435M [00:31<00:58, 2.86MB/s]\n 63%|█████████████████████████▎              | 276M/435M [00:31<00:56, 2.95MB/s]\n 63%|█████████████████████████▍              | 276M/435M [00:32<00:55, 3.02MB/s]\n 64%|█████████████████████████▍              | 277M/435M [00:32<00:53, 3.10MB/s]\n 64%|█████████████████████████▍              | 277M/435M [00:32<00:52, 3.17MB/s]\n 64%|█████████████████████████▍              | 277M/435M [00:32<00:50, 3.26MB/s]\n 64%|█████████████████████████▌              | 278M/435M [00:32<00:49, 3.34MB/s]\n 64%|█████████████████████████▌              | 278M/435M [00:32<00:48, 3.43MB/s]\n 64%|█████████████████████████▌              | 278M/435M [00:32<00:46, 3.50MB/s]\n 64%|█████████████████████████▋              | 279M/435M [00:32<00:45, 3.61MB/s]\n 64%|█████████████████████████▋              | 279M/435M [00:32<00:43, 3.72MB/s]\n 64%|█████████████████████████▋              | 280M/435M [00:33<00:42, 3.82MB/s]\n 64%|█████████████████████████▋              | 280M/435M [00:33<00:41, 3.92MB/s]\n 64%|█████████████████████████▊              | 281M/435M [00:33<00:40, 4.03MB/s]\n 65%|█████████████████████████▊              | 281M/435M [00:33<00:38, 4.17MB/s]\n 65%|█████████████████████████▉              | 282M/435M [00:33<00:37, 4.27MB/s]\n 65%|█████████████████████████▉              | 282M/435M [00:33<00:36, 4.41MB/s]\n 65%|█████████████████████████▉              | 283M/435M [00:33<00:35, 4.52MB/s]\n 65%|██████████████████████████              | 283M/435M [00:33<00:34, 4.65MB/s]\n 65%|██████████████████████████              | 284M/435M [00:33<00:33, 4.79MB/s]\n 65%|██████████████████████████              | 284M/435M [00:34<00:32, 4.93MB/s]\n 65%|██████████████████████████▏             | 285M/435M [00:34<00:31, 5.07MB/s]\n 66%|██████████████████████████▏             | 285M/435M [00:34<00:30, 5.21MB/s]\n 66%|██████████████████████████▎             | 286M/435M [00:34<00:29, 5.33MB/s]\n 66%|██████████████████████████▎             | 287M/435M [00:34<00:28, 5.50MB/s]\n 66%|██████████████████████████▍             | 287M/435M [00:34<00:27, 5.65MB/s]\n 66%|██████████████████████████▍             | 288M/435M [00:34<00:26, 5.81MB/s]\n 66%|██████████████████████████▌             | 289M/435M [00:34<00:25, 5.98MB/s]\n 66%|██████████████████████████▌             | 289M/435M [00:34<00:25, 6.11MB/s]\n 67%|██████████████████████████▋             | 290M/435M [00:35<00:24, 6.27MB/s]\n 67%|██████████████████████████▋             | 291M/435M [00:35<00:23, 6.43MB/s]\n 67%|██████████████████████████▊             | 291M/435M [00:35<00:22, 6.61MB/s]\n 67%|██████████████████████████▊             | 292M/435M [00:35<00:22, 6.82MB/s]\n 67%|██████████████████████████▉             | 293M/435M [00:35<00:21, 6.98MB/s]\n 67%|██████████████████████████▉             | 294M/435M [00:35<00:20, 7.16MB/s]\n 68%|███████████████████████████             | 295M/435M [00:35<00:20, 7.32MB/s]\n 68%|███████████████████████████▏            | 295M/435M [00:35<00:19, 7.54MB/s]\n 68%|███████████████████████████▏            | 296M/435M [00:35<00:19, 7.62MB/s]\n 68%|███████████████████████████▎            | 297M/435M [00:35<00:19, 7.54MB/s]\n 68%|███████████████████████████▎            | 298M/435M [00:36<00:18, 7.83MB/s]\n 69%|███████████████████████████▍            | 299M/435M [00:36<00:17, 8.12MB/s]\n 69%|███████████████████████████▌            | 300M/435M [00:36<00:16, 8.37MB/s]\n 69%|███████████████████████████▋            | 301M/435M [00:36<00:16, 8.63MB/s]\n 69%|███████████████████████████▋            | 302M/435M [00:36<00:15, 8.84MB/s]\n 70%|███████████████████████████▊            | 303M/435M [00:36<00:15, 9.11MB/s]\n 70%|███████████████████████████▉            | 304M/435M [00:36<00:14, 9.37MB/s]\n 70%|████████████████████████████            | 305M/435M [00:36<00:14, 9.60MB/s]\n 70%|████████████████████████████            | 306M/435M [00:36<00:13, 9.84MB/s]\n 71%|████████████████████████████▏           | 307M/435M [00:37<00:13, 10.1MB/s]\n 71%|████████████████████████████▎           | 308M/435M [00:37<00:12, 10.4MB/s]\n 71%|████████████████████████████▍           | 309M/435M [00:37<00:12, 10.6MB/s]\n 71%|████████████████████████████▌           | 311M/435M [00:37<00:12, 10.9MB/s]\n 72%|████████████████████████████▋           | 312M/435M [00:37<00:11, 11.1MB/s]\n 72%|████████████████████████████▊           | 313M/435M [00:37<00:11, 11.2MB/s]\n 72%|████████████████████████████▉           | 314M/435M [00:37<00:10, 11.6MB/s]\n 73%|█████████████████████████████           | 316M/435M [00:37<00:10, 11.9MB/s]\n 73%|█████████████████████████████▏          | 317M/435M [00:37<00:10, 12.2MB/s]\n 73%|█████████████████████████████▎          | 318M/435M [00:38<00:09, 12.5MB/s]\n 73%|█████████████████████████████▍          | 320M/435M [00:38<00:09, 12.8MB/s]\n 74%|█████████████████████████████▌          | 321M/435M [00:38<00:09, 13.1MB/s]\n 74%|█████████████████████████████▋          | 323M/435M [00:38<00:08, 13.4MB/s]\n 75%|█████████████████████████████▊          | 324M/435M [00:38<00:08, 13.7MB/s]\n 75%|█████████████████████████████▉          | 326M/435M [00:38<00:08, 14.1MB/s]\n 75%|██████████████████████████████          | 328M/435M [00:38<00:07, 14.4MB/s]\n 76%|██████████████████████████████▎         | 329M/435M [00:38<00:07, 14.7MB/s]\n 76%|██████████████████████████████▍         | 331M/435M [00:38<00:07, 15.1MB/s]\n 76%|██████████████████████████████▌         | 333M/435M [00:39<00:07, 15.4MB/s]\n 77%|██████████████████████████████▋         | 334M/435M [00:39<00:06, 15.6MB/s]\n 77%|██████████████████████████████▉         | 336M/435M [00:39<00:06, 15.9MB/s]\n 78%|███████████████████████████████         | 338M/435M [00:39<00:06, 16.3MB/s]\n 78%|███████████████████████████████▏        | 340M/435M [00:39<00:06, 16.7MB/s]\n 79%|███████████████████████████████▍        | 342M/435M [00:39<00:05, 17.1MB/s]\n 79%|███████████████████████████████▌        | 344M/435M [00:39<00:05, 17.5MB/s]\n 79%|███████████████████████████████▊        | 346M/435M [00:39<00:05, 17.9MB/s]\n 80%|███████████████████████████████▉        | 348M/435M [00:40<00:05, 18.3MB/s]\n 80%|████████████████████████████████▏       | 350M/435M [00:40<00:04, 18.7MB/s]\n 81%|████████████████████████████████▎       | 352M/435M [00:40<00:04, 18.8MB/s]\n 81%|████████████████████████████████▌       | 354M/435M [00:40<00:04, 19.3MB/s]\n 82%|████████████████████████████████▋       | 356M/435M [00:40<00:04, 19.7MB/s]\n 82%|████████████████████████████████▉       | 359M/435M [00:40<00:03, 20.3MB/s]\n 83%|█████████████████████████████████▏      | 361M/435M [00:40<00:03, 20.7MB/s]\n 83%|█████████████████████████████████▎      | 363M/435M [00:40<00:03, 21.0MB/s]\n 84%|█████████████████████████████████▌      | 366M/435M [00:40<00:03, 21.5MB/s]\n 85%|█████████████████████████████████▊      | 368M/435M [00:41<00:03, 21.8MB/s]\n 85%|██████████████████████████████████      | 370M/435M [00:41<00:03, 22.3MB/s]\n 86%|██████████████████████████████████▎     | 373M/435M [00:41<00:02, 22.7MB/s]\n 86%|██████████████████████████████████▌     | 376M/435M [00:41<00:02, 23.1MB/s]\n 87%|██████████████████████████████████▋     | 378M/435M [00:41<00:02, 23.4MB/s]\n 87%|██████████████████████████████████▉     | 381M/435M [00:41<00:02, 23.6MB/s]\n 88%|███████████████████████████████████▏    | 383M/435M [00:41<00:02, 23.8MB/s]\n 89%|███████████████████████████████████▍    | 386M/435M [00:41<00:02, 23.7MB/s]\n 89%|███████████████████████████████████▋    | 388M/435M [00:41<00:02, 23.9MB/s]\n 90%|███████████████████████████████████▉    | 391M/435M [00:42<00:01, 24.3MB/s]\n 90%|████████████████████████████████████▏   | 394M/435M [00:42<00:01, 24.5MB/s]\n 91%|████████████████████████████████████▍   | 396M/435M [00:42<00:01, 24.9MB/s]\n 92%|████████████████████████████████████▋   | 399M/435M [00:42<00:01, 23.8MB/s]\n 92%|████████████████████████████████████▉   | 402M/435M [00:42<00:01, 24.4MB/s]\n 93%|█████████████████████████████████████▏  | 405M/435M [00:42<00:01, 25.1MB/s]\n 94%|█████████████████████████████████████▍  | 408M/435M [00:42<00:01, 25.7MB/s]\n 94%|█████████████████████████████████████▋  | 411M/435M [00:42<00:00, 26.0MB/s]\n 95%|█████████████████████████████████████▉  | 413M/435M [00:42<00:00, 26.0MB/s]\n 96%|██████████████████████████████████████▏ | 416M/435M [00:43<00:00, 25.6MB/s]\n 96%|██████████████████████████████████████▍ | 419M/435M [00:43<00:00, 25.8MB/s]\n 97%|██████████████████████████████████████▊ | 422M/435M [00:43<00:00, 25.9MB/s]\n 98%|███████████████████████████████████████ | 425M/435M [00:43<00:00, 26.3MB/s]\n 98%|███████████████████████████████████████▎| 427M/435M [00:43<00:00, 26.4MB/s]\n 99%|███████████████████████████████████████▌| 430M/435M [00:43<00:00, 26.6MB/s]\n100%|███████████████████████████████████████▊| 433M/435M [00:43<00:00, 26.7MB/s]\n                                                                                \n2023-02-20 20:14:07,518 INFO Download rate 9.7M/s\n2023-02-20 20:14:07,754 INFO Welcome to the CDS\n2023-02-20 20:14:07,754 INFO Sending request to https://cds.climate.copernicus.eu/api/v2/resources/satellite-sea-level-global\n2023-02-20 20:14:08,043 INFO Request is queued\n2023-02-20 20:14:09,160 INFO Request is running\n2023-02-20 20:15:24,294 INFO Request is completed\n2023-02-20 20:15:24,295 INFO Downloading https://download-0003-clone.copernicus-climate.eu/cache-compute-0003/cache/data2/dataset-satellite-sea-level-global-b4c35ed3-d57b-4004-a120-c360cf77dc07.zip to test_data.zip (438.1M)\n\n  0%|                                                | 0.00/438M [00:00<?, ?B/s]\n  0%|                                     | 8.00k/438M [00:00<1:42:20, 74.8kB/s]\n  0%|                                        | 34.0k/438M [00:00<44:22, 173kB/s]\n  0%|                                        | 77.0k/438M [00:00<27:48, 275kB/s]\n  0%|                                         | 182k/438M [00:00<13:54, 550kB/s]\n  0%|                                         | 334k/438M [00:00<08:54, 858kB/s]\n  0%|                                        | 632k/438M [00:00<05:05, 1.50MB/s]\n  0%|                                        | 988k/438M [00:00<03:40, 2.08MB/s]\n  0%|▏                                      | 1.57M/438M [00:00<02:21, 3.24MB/s]\n  1%|▏                                      | 2.49M/438M [00:00<01:32, 4.96MB/s]\n  1%|▎                                      | 3.88M/438M [00:01<01:00, 7.49MB/s]\n  1%|▌                                      | 6.18M/438M [00:01<00:38, 11.8MB/s]\n  2%|▋                                      | 8.15M/438M [00:01<00:32, 13.9MB/s]\n  2%|▉                                      | 10.8M/438M [00:01<00:26, 17.2MB/s]\n  3%|█▏                                     | 12.8M/438M [00:01<00:25, 17.7MB/s]\n  3%|█▎                                     | 15.3M/438M [00:01<00:22, 19.6MB/s]\n  4%|█▌                                     | 17.4M/438M [00:01<00:22, 19.7MB/s]\n  5%|█▊                                     | 19.9M/438M [00:01<00:21, 20.8MB/s]\n  5%|█▉                                     | 22.1M/438M [00:01<00:20, 21.0MB/s]\n  6%|██▏                                    | 24.6M/438M [00:02<00:20, 21.6MB/s]\n  6%|██▍                                    | 26.9M/438M [00:02<00:19, 21.8MB/s]\n  7%|██▌                                    | 29.3M/438M [00:02<00:19, 22.1MB/s]\n  7%|██▊                                    | 31.7M/438M [00:02<00:19, 22.2MB/s]\n  8%|███                                    | 33.9M/438M [00:02<00:19, 21.8MB/s]\n  8%|███▎                                   | 36.8M/438M [00:02<00:17, 23.4MB/s]\n  9%|███▍                                   | 39.3M/438M [00:02<00:17, 23.5MB/s]\n 10%|███▋                                   | 42.0M/438M [00:02<00:17, 23.9MB/s]\n 10%|███▉                                   | 44.6M/438M [00:02<00:16, 24.3MB/s]\n 11%|████▏                                  | 47.3M/438M [00:03<00:16, 24.7MB/s]\n 11%|████▍                                  | 50.2M/438M [00:03<00:15, 25.5MB/s]\n 12%|████▋                                  | 53.1M/438M [00:03<00:15, 26.1MB/s]\n 13%|████▉                                  | 55.8M/438M [00:03<00:15, 25.7MB/s]\n 13%|█████▏                                 | 58.5M/438M [00:03<00:15, 25.7MB/s]\n 14%|█████▍                                 | 61.3M/438M [00:03<00:15, 26.0MB/s]\n 15%|█████▋                                 | 64.2M/438M [00:03<00:14, 26.4MB/s]\n 15%|█████▉                                 | 67.1M/438M [00:03<00:14, 26.6MB/s]\n 16%|██████▏                                | 69.8M/438M [00:03<00:14, 26.1MB/s]\n 17%|██████▍                                | 72.6M/438M [00:04<00:14, 26.4MB/s]\n 17%|██████▋                                | 75.6M/438M [00:04<00:14, 26.8MB/s]\n 18%|██████▉                                | 78.5M/438M [00:04<00:13, 27.1MB/s]\n 19%|███████▏                               | 81.3M/438M [00:04<00:13, 26.8MB/s]\n 19%|███████▍                               | 84.2M/438M [00:04<00:13, 27.1MB/s]\n 20%|███████▋                               | 86.8M/438M [00:04<00:14, 26.3MB/s]\n 20%|███████▉                               | 89.3M/438M [00:04<00:14, 24.8MB/s]\n 21%|████████▏                              | 91.8M/438M [00:04<00:14, 25.3MB/s]\n 22%|████████▍                              | 94.4M/438M [00:04<00:14, 25.1MB/s]\n 22%|████████▋                              | 97.4M/438M [00:05<00:13, 25.9MB/s]\n 23%|█████████▏                              | 100M/438M [00:05<00:13, 25.5MB/s]\n 23%|█████████▍                              | 103M/438M [00:05<00:13, 26.3MB/s]\n 24%|█████████▋                              | 106M/438M [00:05<00:13, 26.3MB/s]\n 25%|█████████▉                              | 109M/438M [00:05<00:12, 26.7MB/s]\n 25%|██████████▏                             | 112M/438M [00:05<00:12, 27.0MB/s]\n 26%|██████████▍                             | 114M/438M [00:05<00:12, 26.6MB/s]\n 27%|██████████▋                             | 117M/438M [00:05<00:12, 26.8MB/s]\n 27%|██████████▉                             | 120M/438M [00:05<00:12, 26.9MB/s]\n 28%|███████████▏                            | 123M/438M [00:06<00:12, 27.0MB/s]\n 29%|███████████▍                            | 126M/438M [00:06<00:12, 26.7MB/s]\n 29%|███████████▋                            | 128M/438M [00:06<00:12, 26.5MB/s]\n 30%|███████████▉                            | 131M/438M [00:06<00:12, 26.3MB/s]\n 31%|████████████▏                           | 134M/438M [00:06<00:12, 26.3MB/s]\n 31%|████████████▍                           | 137M/438M [00:06<00:11, 26.4MB/s]\n 32%|████████████▊                           | 140M/438M [00:06<00:11, 26.7MB/s]\n 33%|█████████████                           | 143M/438M [00:06<00:11, 27.0MB/s]\n 33%|█████████████▎                          | 146M/438M [00:06<00:11, 27.2MB/s]\n 34%|█████████████▌                          | 148M/438M [00:07<00:11, 26.5MB/s]\n 35%|█████████████▊                          | 151M/438M [00:07<00:11, 26.9MB/s]\n 35%|██████████████                          | 154M/438M [00:07<00:11, 27.0MB/s]\n 36%|██████████████▎                         | 157M/438M [00:07<00:10, 27.2MB/s]\n 36%|██████████████▌                         | 160M/438M [00:07<00:10, 27.1MB/s]\n 37%|██████████████▊                         | 162M/438M [00:07<00:10, 26.4MB/s]\n 38%|███████████████                         | 165M/438M [00:07<00:10, 26.8MB/s]\n 38%|███████████████▎                        | 168M/438M [00:07<00:10, 26.9MB/s]\n 39%|███████████████▌                        | 171M/438M [00:07<00:10, 27.0MB/s]\n 40%|███████████████▉                        | 174M/438M [00:08<00:10, 26.9MB/s]\n 40%|████████████████▏                       | 177M/438M [00:08<00:10, 26.5MB/s]\n 41%|████████████████▍                       | 179M/438M [00:08<00:10, 26.4MB/s]\n 42%|████████████████▋                       | 182M/438M [00:08<00:10, 26.8MB/s]\n 42%|████████████████▉                       | 185M/438M [00:08<00:09, 27.1MB/s]\n 43%|█████████████████▏                      | 188M/438M [00:08<00:09, 27.3MB/s]\n 44%|█████████████████▍                      | 191M/438M [00:08<00:09, 27.4MB/s]\n 44%|█████████████████▋                      | 194M/438M [00:08<00:09, 27.2MB/s]\n 45%|█████████████████▉                      | 197M/438M [00:08<00:09, 26.5MB/s]\n 46%|██████████████████▏                     | 200M/438M [00:09<00:09, 26.8MB/s]\n 46%|██████████████████▍                     | 202M/438M [00:09<00:09, 26.3MB/s]\n 47%|██████████████████▋                     | 205M/438M [00:09<00:09, 26.2MB/s]\n 47%|██████████████████▉                     | 208M/438M [00:09<00:09, 25.8MB/s]\n 48%|███████████████████▏                    | 210M/438M [00:09<00:09, 26.1MB/s]\n 49%|███████████████████▍                    | 213M/438M [00:09<00:09, 25.5MB/s]\n 49%|███████████████████▋                    | 216M/438M [00:09<00:09, 25.8MB/s]\n 50%|███████████████████▉                    | 219M/438M [00:09<00:08, 26.4MB/s]\n 51%|████████████████████▏                   | 222M/438M [00:09<00:08, 26.9MB/s]\n 51%|████████████████████▍                   | 224M/438M [00:10<00:08, 26.6MB/s]\n 52%|████████████████████▋                   | 227M/438M [00:10<00:08, 25.9MB/s]\n 52%|████████████████████▉                   | 230M/438M [00:10<00:08, 25.9MB/s]\n 53%|█████████████████████▏                  | 233M/438M [00:10<00:08, 26.4MB/s]\n 54%|█████████████████████▍                  | 235M/438M [00:10<00:08, 26.0MB/s]\n 54%|█████████████████████▋                  | 238M/438M [00:10<00:07, 26.2MB/s]\n 55%|█████████████████████▉                  | 241M/438M [00:10<00:07, 26.0MB/s]\n 56%|██████████████████████▏                 | 244M/438M [00:10<00:07, 26.1MB/s]\n 56%|██████████████████████▌                 | 247M/438M [00:10<00:07, 26.4MB/s]\n 57%|██████████████████████▊                 | 249M/438M [00:11<00:07, 26.7MB/s]\n 58%|███████████████████████                 | 252M/438M [00:11<00:07, 27.0MB/s]\n 58%|███████████████████████▎                | 255M/438M [00:11<00:07, 26.7MB/s]\n 59%|███████████████████████▌                | 258M/438M [00:11<00:07, 26.6MB/s]\n 60%|███████████████████████▊                | 261M/438M [00:11<00:06, 27.0MB/s]\n 60%|████████████████████████                | 264M/438M [00:11<00:06, 27.2MB/s]\n 61%|████████████████████████▎               | 267M/438M [00:11<00:06, 27.3MB/s]\n 62%|████████████████████████▌               | 270M/438M [00:11<00:06, 27.4MB/s]\n 62%|████████████████████████▉               | 273M/438M [00:11<00:06, 27.4MB/s]\n 63%|█████████████████████████               | 275M/438M [00:12<00:06, 26.6MB/s]\n 63%|█████████████████████████▎              | 278M/438M [00:12<00:07, 21.1MB/s]\n 64%|█████████████████████████▌              | 280M/438M [00:12<00:07, 21.3MB/s]\n 64%|█████████████████████████▋              | 282M/438M [00:12<00:07, 21.1MB/s]\n 65%|█████████████████████████▉              | 284M/438M [00:12<00:07, 21.0MB/s]\n 65%|██████████████████████████▏             | 287M/438M [00:12<00:07, 22.4MB/s]\n 66%|██████████████████████████▍             | 290M/438M [00:12<00:06, 23.8MB/s]\n 67%|██████████████████████████▋             | 292M/438M [00:12<00:06, 24.0MB/s]\n 67%|██████████████████████████▉             | 295M/438M [00:13<00:06, 24.9MB/s]\n 68%|███████████████████████████▏            | 298M/438M [00:13<00:05, 25.7MB/s]\n 69%|███████████████████████████▍            | 301M/438M [00:13<00:05, 26.3MB/s]\n 69%|███████████████████████████▋            | 304M/438M [00:13<00:05, 26.6MB/s]\n 70%|███████████████████████████▉            | 307M/438M [00:13<00:05, 26.9MB/s]\n 71%|████████████████████████████▏           | 309M/438M [00:13<00:05, 26.6MB/s]\n 71%|████████████████████████████▍           | 312M/438M [00:13<00:05, 26.2MB/s]\n 72%|████████████████████████████▊           | 315M/438M [00:13<00:04, 26.7MB/s]\n 73%|█████████████████████████████           | 318M/438M [00:13<00:04, 26.5MB/s]\n 73%|█████████████████████████████▎          | 321M/438M [00:14<00:04, 26.2MB/s]\n 74%|█████████████████████████████▌          | 324M/438M [00:14<00:04, 26.6MB/s]\n 74%|█████████████████████████████▊          | 326M/438M [00:14<00:04, 26.3MB/s]\n 75%|██████████████████████████████          | 329M/438M [00:14<00:04, 25.8MB/s]\n 76%|██████████████████████████████▎         | 332M/438M [00:14<00:04, 26.1MB/s]\n 76%|██████████████████████████████▌         | 335M/438M [00:14<00:04, 26.4MB/s]\n 77%|██████████████████████████████▊         | 337M/438M [00:14<00:04, 26.4MB/s]\n 78%|███████████████████████████████         | 340M/438M [00:14<00:03, 26.6MB/s]\n 78%|███████████████████████████████▎        | 343M/438M [00:14<00:03, 26.6MB/s]\n 79%|███████████████████████████████▌        | 346M/438M [00:15<00:03, 26.9MB/s]\n 80%|███████████████████████████████▊        | 349M/438M [00:15<00:03, 27.1MB/s]\n 80%|████████████████████████████████        | 352M/438M [00:15<00:03, 27.3MB/s]\n 81%|████████████████████████████████▍       | 355M/438M [00:15<00:03, 27.4MB/s]\n 82%|████████████████████████████████▋       | 358M/438M [00:15<00:03, 27.5MB/s]\n 82%|████████████████████████████████▉       | 361M/438M [00:15<00:02, 27.7MB/s]\n 83%|█████████████████████████████████▏      | 364M/438M [00:15<00:02, 27.7MB/s]\n 84%|█████████████████████████████████▍      | 366M/438M [00:15<00:02, 27.5MB/s]\n 84%|█████████████████████████████████▋      | 369M/438M [00:15<00:02, 26.9MB/s]\n 85%|█████████████████████████████████▉      | 372M/438M [00:16<00:02, 26.5MB/s]\n 85%|██████████████████████████████████▏     | 374M/438M [00:16<00:02, 25.4MB/s]\n 86%|██████████████████████████████████▍     | 377M/438M [00:16<00:02, 25.1MB/s]\n 87%|██████████████████████████████████▋     | 380M/438M [00:16<00:02, 25.5MB/s]\n 87%|██████████████████████████████████▉     | 383M/438M [00:16<00:02, 26.0MB/s]\n 88%|███████████████████████████████████▏    | 385M/438M [00:16<00:02, 26.4MB/s]\n 89%|███████████████████████████████████▍    | 388M/438M [00:16<00:01, 26.7MB/s]\n 89%|███████████████████████████████████▋    | 391M/438M [00:16<00:01, 27.0MB/s]\n 90%|███████████████████████████████████▉    | 394M/438M [00:16<00:01, 27.2MB/s]\n 91%|████████████████████████████████████▎   | 397M/438M [00:17<00:01, 27.4MB/s]\n 91%|████████████████████████████████████▌   | 400M/438M [00:17<00:01, 27.5MB/s]\n 92%|████████████████████████████████████▊   | 403M/438M [00:17<00:01, 27.7MB/s]\n 93%|█████████████████████████████████████   | 406M/438M [00:17<00:01, 27.7MB/s]\n 93%|█████████████████████████████████████▎  | 409M/438M [00:17<00:01, 27.7MB/s]\n 94%|█████████████████████████████████████▌  | 412M/438M [00:17<00:01, 27.4MB/s]\n 95%|█████████████████████████████████████▊  | 414M/438M [00:17<00:00, 26.7MB/s]\n 95%|██████████████████████████████████████  | 417M/438M [00:17<00:00, 26.9MB/s]\n 96%|██████████████████████████████████████▎ | 420M/438M [00:17<00:00, 26.8MB/s]\n 96%|██████████████████████████████████████▌ | 423M/438M [00:18<00:00, 26.6MB/s]\n 97%|██████████████████████████████████████▊ | 426M/438M [00:18<00:00, 27.0MB/s]\n 98%|███████████████████████████████████████ | 429M/438M [00:18<00:00, 27.6MB/s]\n 98%|███████████████████████████████████████▎| 431M/438M [00:18<00:00, 26.8MB/s]\n 99%|███████████████████████████████████████▌| 434M/438M [00:18<00:00, 26.6MB/s]\n100%|███████████████████████████████████████▊| 436M/438M [00:18<00:00, 25.6MB/s]\n                                                                                \n2023-02-20 20:15:44,263 INFO Download rate 21.9M/s\n",
  "history_begin_time" : 1676923921525,
  "history_end_time" : 1676924146279,
  "history_notes" : null,
  "history_process" : "dhjb5i",
  "host_id" : "ycru82",
  "indicator" : "Done"
},{
  "history_id" : "r6737lac8ml",
  "history_input" : "from dependency import logger\nfrom zipfile import ZipFile\n\ndef unzip_file(zip_file_path, extract_to_path):\n    try:\n        with ZipFile(zip_file_path) as zip_file_object:          \n            zip_file_object.extractall(extract_to_path)\n            \n    except:\n        logger.error(\"Something went wrong while extracting File\" )\n",
  "history_output" : "",
  "history_begin_time" : 1676923915437,
  "history_end_time" : 1676923961302,
  "history_notes" : null,
  "history_process" : "zbt6sg",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
},{
  "history_id" : "tzmxvnpxiw7",
  "history_input" : "\nfrom dependency import logger\n\nimport cdsapi\n\nclient = cdsapi.Client()\n\ndef download_train_data():\n    try:\n        client.retrieve(\n            'satellite-sea-level-global',\n            {\n                'version': 'vDT2021',\n                'variable': 'all',\n                'format': 'zip',\n                'year': [\n                    '1998',\n                ],\n                'month': [\n                '01', '02', '03',\n                '04', '05', '06',\n                '07', '08', '09',\n                '10', '11', '12',\n            ],\n                'day': ['01','10','20','30'],\n            },\n            'train_data.zip')\n        return 'train_data.zip'\n    except:\n        logger.error(\"Something went wrong while downloading training data\")\n\n\ndef download_test_data():\n    try:\n        client.retrieve(\n            'satellite-sea-level-global',\n            {\n                'version': 'vDT2021',\n                'variable': 'all',\n                'format': 'zip',\n                'year': [ '2019' ],\n                'month': [\n                    '01', '02', '03',\n                    '04', '05', '06',\n                    '07', '08', '09',\n                    '10', '11', '12',\n                ],\n                'day': ['01','10','20','30'],\n            },\n            'test_data.zip')\n        return 'test_data.zip'\n    except:\n        logger.error(\"Something went wrong while downloading test data\")\n\n\ndef download_data():\n    train_zip_file = download_train_data()\n    test_zip_file = download_test_data()\n    return train_zip_file, test_zip_file",
  "history_output" : "Running",
  "history_begin_time" : 1676923916627,
  "history_end_time" : 1676923961302,
  "history_notes" : null,
  "history_process" : "g7a3zf",
  "host_id" : "ycru82",
  "indicator" : "Stopped"
}]
