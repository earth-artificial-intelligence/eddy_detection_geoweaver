[{
  "history_id" : "5syah5v8i01",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824537,
  "history_end_time" : 1684261974090,
  "history_notes" : null,
  "history_process" : "0ajbp0",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "t8orrsm515g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824543,
  "history_end_time" : 1684261974093,
  "history_notes" : null,
  "history_process" : "tcr60i",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "2gsi3esoqch",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824544,
  "history_end_time" : 1684261974095,
  "history_notes" : null,
  "history_process" : "ejp9sg",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "qmo9dfc6c5x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824545,
  "history_end_time" : 1684261974097,
  "history_notes" : null,
  "history_process" : "wn1y5m",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "e6jx7ecmadw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824547,
  "history_end_time" : 1684261974099,
  "history_notes" : null,
  "history_process" : "znr9qa",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "zhjwfr45io4",
  "history_input" : "from training_and_plot_utils import *\nfrom model_components import *\nfrom device_config_and_data_loader import *\nfrom tqdm.auto import tqdm\n\n\n# create some aliases\nloss, opt, sched = loss_fn, optimizer, scheduler\n\ncheckpoint_path = os.path.join(tensorboard_dir, \"model_ckpt_{epoch}.pt\")\nearly_stopping = EarlyStopping(\n    patience=10,\n    path=checkpoint_path,\n    min_epochs=30,\n)\n\nprogress_bar = tqdm(range(num_epochs), desc=\"Training: \", unit=\"epoch(s)\")\nfor N in progress_bar:\n    train_loss, val_loss, train_m, val_m = run_epoch(\n        N,\n        model,\n        loss,\n        opt,\n        sched,\n        train_loader,\n        val_loader,\n        train_metrics,\n        val_metrics,\n        writer,\n    )\n\n    # update progress bar\n    train_m_copy = {f\"train_{k}\".lower(): v.cpu().numpy() for k, v in train_m.items()}\n    val_m_copy = {f\"val_{k}\".lower(): v.cpu().numpy() for k, v in val_m.items()}\n    progress_bar.set_postfix(**train_m_copy, **val_m_copy)\n\n    # early stopping when validation loss stops improving\n    early_stopping.path = checkpoint_path.format(epoch=N)\n    early_stopping(val_loss, model)\n    if early_stopping.early_stop:\n        print(\n            f\"Early stopping at epoch {N}\"\n            f\" with validation loss {val_loss:.3f}\"\n            f\" and training loss {train_loss:.3f}\"\n        )\n        break\n\n    # TODO (homework): save checkpoint every 10 epochs\n\n# add hyperparameters and corresponding results to tensorboard HParams table\nhparam_dict = {\n    \"backbone\": model_name,\n    \"num_epochs\": num_epochs,\n    \"batch_size\": batch_size,\n    \"num_classes\": num_classes,\n    \"binary_mask\": binary,\n    \"optimizer\": optimizer.__class__.__name__,\n    \"max_lr\": max_lr,\n    \"loss_function\": loss_fn.__class__.__name__,\n}\nprint(train_m)\nmetrics_dict = {\n    \"train/end_epoch\": N,\n    \"train/loss\": train_loss,\n    \"train/Accuracy\": train_m[\"MulticlassAccuracy\"],\n    \"val/loss\": val_loss,\n    \"val/Accuracy\": val_m[\"MulticlassAccuracy\"],\n}\nadd_hparams(writer, hparam_dict, metrics_dict, epoch_num=N)\nwriter.close()\n\n# save model to tensorboard folder\nmodel_path = os.path.join(tensorboard_dir, f\"model_ckpt_final_full_data.pt\")\n\nprint(model_path)\n\n\nprint(\"train/Accuracy\", train_m[\"MulticlassAccuracy\"])\nprint(\"val/Accuracy\", val_m[\"MulticlassAccuracy\"])\ntorch.save(model.state_dict(), model_path)",
  "history_output" : "Read 24 samples from /home/chetana/ML_eddie/cds_ssh_1998-2018_10day_interval/subset_pet_masks_with_adt_1998-1999_lat14N-46N_lon166W-134W.npz.\nRead 12 samples from /home/chetana/ML_eddie/cds_ssh_2019_10day_interval/subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz.\nRead 24 samples from /home/chetana/ML_eddie/cds_ssh_1998-2018_10day_interval/subset_pet_masks_with_adt_1998-1999_lat14N-46N_lon166W-134W.npz.\nRead 12 samples from /home/chetana/ML_eddie/cds_ssh_2019_10day_interval/subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz.\nTotal number of pixels in training set: 0.39 megapixels across 24 SSH maps\nNumber of pixels that are not eddies: 0.28 megapixels (72.00%)\nNumber of pixels that are anticyclonic eddies: 0.06 megapixels (14.23%)\nNumber of pixels that are cyclonic eddies: 0.05 megapixels (13.77%)\n\n======================================================================\nWriting Tensorboard logs to /home/chetana/tensorboard/2023-05-16_18-32\n======================================================================\n\nTraining:   0%|                                   | 0/250 [00:00<?, ?epoch(s)/s]\nTraining:   0%| | 0/250 [00:06<?, ?epoch(s)/s, train_multiclassaccuracy=0.239357\nTraining:   0%| | 1/250 [00:06<25:19,  6.10s/epoch(s), train_multiclassaccuracy=\nTraining:   0%| | 1/250 [00:10<25:19,  6.10s/epoch(s), train_multiclassaccuracy=\nTraining:   1%| | 2/250 [00:10<22:05,  5.35s/epoch(s), train_multiclassaccuracy=\nTraining:   1%| | 2/250 [00:16<22:05,  5.35s/epoch(s), train_multiclassaccuracy=\nTraining:   1%| | 3/250 [00:16<21:42,  5.27s/epoch(s), train_multiclassaccuracy=\nTraining:   1%| | 3/250 [00:20<21:42,  5.27s/epoch(s), train_multiclassaccuracy=\nTraining:   2%| | 4/250 [00:20<20:48,  5.08s/epoch(s), train_multiclassaccuracy=\nTraining:   2%| | 4/250 [00:26<20:48,  5.08s/epoch(s), train_multiclassaccuracy=\nTraining:   2%| | 5/250 [00:26<20:51,  5.11s/epoch(s), train_multiclassaccuracy=\nTraining:   2%| | 5/250 [00:30<20:51,  5.11s/epoch(s), train_multiclassaccuracy=\nTraining:   2%| | 6/250 [00:30<20:19,  5.00s/epoch(s), train_multiclassaccuracy=\nTraining:   2%| | 6/250 [00:35<20:19,  5.00s/epoch(s), train_multiclassaccuracy=\nTraining:   3%| | 7/250 [00:35<20:12,  4.99s/epoch(s), train_multiclassaccuracy=\nTraining:   3%| | 7/250 [00:40<20:12,  4.99s/epoch(s), train_multiclassaccuracy=\nTraining:   3%| | 8/250 [00:40<20:12,  5.01s/epoch(s), train_multiclassaccuracy=\nTraining:   3%| | 8/250 [00:45<20:12,  5.01s/epoch(s), train_multiclassaccuracy=\nTraining:   4%| | 9/250 [00:45<19:58,  4.97s/epoch(s), train_multiclassaccuracy=\nTraining:   4%| | 9/250 [00:50<19:58,  4.97s/epoch(s), train_multiclassaccuracy=\nTraining:   4%| | 10/250 [00:50<19:51,  4.96s/epoch(s), train_multiclassaccuracy\nTraining:   4%| | 10/250 [00:55<19:51,  4.96s/epoch(s), train_multiclassaccuracy\nTraining:   4%| | 11/250 [00:55<19:29,  4.89s/epoch(s), train_multiclassaccuracy\nTraining:   4%| | 11/250 [01:00<19:29,  4.89s/epoch(s), train_multiclassaccuracy\nTraining:   5%| | 12/250 [01:00<19:26,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:   5%| | 12/250 [01:05<19:26,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:   5%| | 13/250 [01:05<19:21,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:   5%| | 13/250 [01:10<19:21,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:   6%| | 14/250 [01:10<19:23,  4.93s/epoch(s), train_multiclassaccuracy\nTraining:   6%| | 14/250 [01:15<19:23,  4.93s/epoch(s), train_multiclassaccuracy\nTraining:   6%| | 15/250 [01:15<19:23,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:   6%| | 15/250 [01:20<19:23,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:   6%| | 16/250 [01:20<19:22,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:   6%| | 16/250 [01:24<19:22,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:   7%| | 17/250 [01:24<19:01,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:   7%| | 17/250 [01:29<19:01,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:   7%| | 18/250 [01:29<18:58,  4.91s/epoch(s), train_multiclassaccuracy\nTraining:   7%| | 18/250 [01:34<18:58,  4.91s/epoch(s), train_multiclassaccuracy\nTraining:   8%| | 19/250 [01:34<18:53,  4.91s/epoch(s), train_multiclassaccuracy\nTraining:   8%| | 19/250 [01:39<18:53,  4.91s/epoch(s), train_multiclassaccuracy\nTraining:   8%| | 20/250 [01:39<18:49,  4.91s/epoch(s), train_multiclassaccuracy\nTraining:   8%| | 20/250 [01:44<18:49,  4.91s/epoch(s), train_multiclassaccuracy\nTraining:   8%| | 21/250 [01:44<19:05,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:   8%| | 21/250 [01:49<19:05,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:   9%| | 22/250 [01:49<18:52,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:   9%| | 22/250 [01:54<18:52,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:   9%| | 23/250 [01:54<18:51,  4.99s/epoch(s), train_multiclassaccuracy\nTraining:   9%| | 23/250 [01:59<18:51,  4.99s/epoch(s), train_multiclassaccuracy\nTraining:  10%| | 24/250 [01:59<18:35,  4.94s/epoch(s), train_multiclassaccuracy\nTraining:  10%| | 24/250 [02:04<18:35,  4.94s/epoch(s), train_multiclassaccuracy\nTraining:  10%| | 25/250 [02:04<18:54,  5.04s/epoch(s), train_multiclassaccuracy\nTraining:  10%| | 25/250 [02:09<18:54,  5.04s/epoch(s), train_multiclassaccuracy\nTraining:  10%| | 26/250 [02:09<18:41,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  10%| | 26/250 [02:14<18:41,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  11%| | 27/250 [02:14<18:39,  5.02s/epoch(s), train_multiclassaccuracy\nTraining:  11%| | 27/250 [02:19<18:39,  5.02s/epoch(s), train_multiclassaccuracy\nTraining:  11%| | 28/250 [02:19<18:22,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:  11%| | 28/250 [02:24<18:22,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:  12%| | 29/250 [02:24<18:21,  4.98s/epoch(s), train_multiclassaccuracy\nTraining:  12%| | 29/250 [02:29<18:21,  4.98s/epoch(s), train_multiclassaccuracy\nTraining:  12%| | 30/250 [02:29<18:18,  4.99s/epoch(s), train_multiclassaccuracy\nTraining:  12%| | 30/250 [02:34<18:18,  4.99s/epoch(s), train_multiclassaccuracy\nTraining:  12%| | 31/250 [02:34<18:20,  5.03s/epoch(s), train_multiclassaccuracy\nTraining:  12%| | 31/250 [02:40<18:20,  5.03s/epoch(s), train_multiclassaccuracy\nTraining:  13%|▏| 32/250 [02:40<18:34,  5.11s/epoch(s), train_multiclassaccuracy\nTraining:  13%|▏| 32/250 [02:45<18:34,  5.11s/epoch(s), train_multiclassaccuracy\nTraining:  13%|▏| 33/250 [02:45<18:15,  5.05s/epoch(s), train_multiclassaccuracy\nTraining:  13%|▏| 33/250 [02:50<18:15,  5.05s/epoch(s), train_multiclassaccuracy\nTraining:  14%|▏| 34/250 [02:50<18:03,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  14%|▏| 34/250 [02:55<18:03,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  14%|▏| 35/250 [02:55<18:04,  5.05s/epoch(s), train_multiclassaccuracy\nTraining:  14%|▏| 35/250 [03:00<18:04,  5.05s/epoch(s), train_multiclassaccuracy\nTraining:  14%|▏| 36/250 [03:00<17:51,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  14%|▏| 36/250 [03:04<17:51,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  15%|▏| 37/250 [03:04<17:33,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:  15%|▏| 37/250 [03:10<17:33,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:  15%|▏| 38/250 [03:10<17:40,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:  15%|▏| 38/250 [03:15<17:40,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:  16%|▏| 39/250 [03:15<17:33,  4.99s/epoch(s), train_multiclassaccuracy\nTraining:  16%|▏| 39/250 [03:20<17:33,  4.99s/epoch(s), train_multiclassaccuracy\nTraining:  16%|▏| 40/250 [03:20<17:35,  5.03s/epoch(s), train_multiclassaccuracy\nTraining:  16%|▏| 40/250 [03:25<17:35,  5.03s/epoch(s), train_multiclassaccuracy\nTraining:  16%|▏| 41/250 [03:25<17:27,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  16%|▏| 41/250 [03:29<17:27,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  17%|▏| 42/250 [03:29<17:11,  4.96s/epoch(s), train_multiclassaccuracy\nTraining:  17%|▏| 42/250 [03:35<17:11,  4.96s/epoch(s), train_multiclassaccuracy\nTraining:  17%|▏| 43/250 [03:35<17:18,  5.02s/epoch(s), train_multiclassaccuracy\nTraining:  17%|▏| 43/250 [03:39<17:18,  5.02s/epoch(s), train_multiclassaccuracy\nTraining:  18%|▏| 44/250 [03:39<17:03,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:  18%|▏| 44/250 [03:45<17:03,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:  18%|▏| 45/250 [03:45<17:05,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:  18%|▏| 45/250 [03:49<17:05,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:  18%|▏| 46/250 [03:49<16:52,  4.96s/epoch(s), train_multiclassaccuracy\nTraining:  18%|▏| 46/250 [03:54<16:52,  4.96s/epoch(s), train_multiclassaccuracy\nTraining:  19%|▏| 47/250 [03:54<16:49,  4.98s/epoch(s), train_multiclassaccuracy\nTraining:  19%|▏| 47/250 [03:59<16:49,  4.98s/epoch(s), train_multiclassaccuracy\nTraining:  19%|▏| 48/250 [03:59<16:37,  4.94s/epoch(s), train_multiclassaccuracy\nTraining:  19%|▏| 48/250 [04:04<16:37,  4.94s/epoch(s), train_multiclassaccuracy\nTraining:  20%|▏| 49/250 [04:04<16:34,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:  20%|▏| 49/250 [04:09<16:34,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:  20%|▏| 50/250 [04:09<16:29,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:  20%|▏| 50/250 [04:14<16:29,  4.95s/epoch(s), train_multiclassaccuracy\nTraining:  20%|▏| 51/250 [04:14<16:37,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  20%|▏| 51/250 [04:19<16:37,  5.01s/epoch(s), train_multiclassaccuracy\nTraining:  21%|▏| 52/250 [04:19<16:23,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:  21%|▏| 52/250 [04:24<16:23,  4.97s/epoch(s), train_multiclassaccuracy\nTraining:  21%|▏| 53/250 [04:24<16:25,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:  21%|▏| 53/250 [04:29<16:25,  5.00s/epoch(s), train_multiclassaccuracy\nTraining:  22%|▏| 54/250 [04:29<16:05,  4.93s/epoch(s), train_multiclassaccuracy\nTraining:  22%|▏| 54/250 [04:34<16:05,  4.93s/epoch(s), train_multiclassaccuracy\nTraining:  22%|▏| 55/250 [04:34<16:01,  4.93s/epoch(s), train_multiclassaccuracy\nTraining:  22%|▏| 55/250 [04:39<16:01,  4.93s/epoch(s), train_multiclassaccuracy\nTraining:  22%|▏| 56/250 [04:39<15:46,  4.88s/epoch(s), train_multiclassaccuracy\nTraining:  22%|▏| 56/250 [04:44<15:46,  4.88s/epoch(s), train_multiclassaccuracy\nTraining:  23%|▏| 57/250 [04:44<15:45,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:  23%|▏| 57/250 [04:48<15:45,  4.90s/epoch(s), train_multiclassaccuracy\nTraining:  23%|▏| 58/250 [04:48<15:31,  4.85s/epoch(s), train_multiclassaccuracy\nTraining:  23%|▏| 58/250 [04:53<15:31,  4.85s/epoch(s), train_multiclassaccuracy\nTraining:  24%|▏| 59/250 [04:53<15:30,  4.87s/epoch(s), train_multiclassaccuracy\nTraining:  24%|▏| 59/250 [04:58<15:30,  4.87s/epoch(s), train_multiclassaccuracy\nTraining:  24%|▏| 60/250 [04:58<15:18,  4.83s/epoch(s), train_multiclassaccuracy\nTraining:  24%|▏| 60/250 [05:03<15:18,  4.83s/epoch(s), train_multiclassaccuracy\nTraining:  24%|▏| 61/250 [05:03<15:17,  4.85s/epoch(s), train_multiclassaccuracy\nTraining:  24%|▏| 61/250 [05:08<15:17,  4.85s/epoch(s), train_multiclassaccuracy\nTraining:  25%|▏| 62/250 [05:08<15:07,  4.83s/epoch(s), train_multiclassaccuracy\nTraining:  25%|▏| 62/250 [05:13<15:07,  4.83s/epoch(s), train_multiclassaccuracy\nTraining:  25%|▎| 63/250 [05:13<15:07,  4.85s/epoch(s), train_multiclassaccuracy\nTraining:  25%|▎| 63/250 [05:18<15:07,  4.85s/epoch(s), train_multiclassaccuracy\nTraining:  26%|▎| 64/250 [05:18<15:07,  4.88s/epoch(s), train_multiclassaccuracy\nTraining:  26%|▎| 64/250 [05:22<15:07,  4.88s/epoch(s), train_multiclassaccuracy\nTraining:  26%|▎| 65/250 [05:22<14:55,  4.84s/epoch(s), train_multiclassaccuracy\nTraining:  26%|▎| 65/250 [05:27<14:55,  4.84s/epoch(s), train_multiclassaccuracy\nTraining:  26%|▎| 66/250 [05:27<14:55,  4.87s/epoch(s), train_multiclassaccuracy\nTraining:  26%|▎| 66/250 [05:32<14:55,  4.87s/epoch(s), train_multiclassaccuracyEarly stopping at epoch 66 with validation loss 0.000 and training loss 1.006\n\nTraining:  26%|▎| 66/250 [05:32<15:26,  5.04s/epoch(s), train_multiclassaccuracy\n{'MulticlassAccuracy': tensor(0.6333)}\n/home/chetana/tensorboard/2023-05-16_18-32/model_ckpt_final_full_data.pt\ntrain/Accuracy tensor(0.6333)\nval/Accuracy tensor(0.7205)\n",
  "history_begin_time" : 1684261927291,
  "history_end_time" : 1684262267508,
  "history_notes" : null,
  "history_process" : "2x5xrm",
  "host_id" : "c2lqcn",
  "indicator" : "Done"
},{
  "history_id" : "9gb8b2vrco2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824564,
  "history_end_time" : 1684261974110,
  "history_notes" : null,
  "history_process" : "n508da",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "qd7wrmjpq7r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824566,
  "history_end_time" : 1684261974112,
  "history_notes" : null,
  "history_process" : "rdt0gy",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "j8lu0pz178o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824567,
  "history_end_time" : 1684261974113,
  "history_notes" : null,
  "history_process" : "xdwq7e",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "easq4yvowwf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824569,
  "history_end_time" : 1684261974114,
  "history_notes" : null,
  "history_process" : "5yfzer",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "d9biy6mf3bh",
  "history_input" : "# Pytorch DataLoader\n\nimport numpy as np\nfrom dependency import os\nfrom device_config_and_data_loader import *\nfrom convert_to_pytorch_data_loader import *\n\n\n# link npz files\n\ndata_root = os.path.join(os.path.expanduser(\"~\"), \"ML_eddie\")\ntrain_folder = os.path.join(data_root, \"cds_ssh_1998-2018_10day_interval\")\nval_folder = os.path.join(data_root, \"cds_ssh_2019_10day_interval\")\ntrain_file = os.path.join(train_folder, \"subset_pet_masks_with_adt_1998-1999_lat14N-46N_lon166W-134W.npz\")\nval_file = os.path.join(val_folder, \"subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz\")\n\n\n# Data Loader\n# set binary = false if we want to distinguish between cyclonic and anticyclonic\n\nbinary = False\nnum_classes = 2 if binary else 3\ntrain_loader, _ = get_eddy_dataloader(train_file, binary=binary, batch_size=batch_size)\nval_loader, _ = get_eddy_dataloader(\n    val_file, binary=binary, batch_size=batch_size, shuffle=False\n)\n\n\n# Class Distribution check\ntrain_masks = train_loader.dataset.masks.copy()\nclass_frequency = np.bincount(train_masks.flatten())\ntotal_pixels = sum(class_frequency)\n\n\nprint(\n    f\"Total number of pixels in training set: {total_pixels/1e6:.2f} megapixels\"\n    f\" across {len(train_masks)} SSH maps\\\\n\"\n    f\"Number of pixels that are not eddies: {class_frequency[0]/1e6:.2f} megapixels \"\n    f\"({class_frequency[0]/total_pixels * 100:.2f}%)\\\\n\"\n    f\"Number of pixels that are anticyclonic eddies: {class_frequency[1]/1e6:.2f} megapixels \"\n    f\"({class_frequency[1]/total_pixels * 100:.2f}%)\\\\n\"\n    f\"Number of pixels that are cyclonic eddies: {class_frequency[2]/1e6:.2f} megapixels \"\n    f\"({class_frequency[2]/total_pixels * 100:.2f}%)\\\\n\"\n)\n\n",
  "history_output" : "Read 24 samples from /home/chetana/ML_eddie/cds_ssh_1998-2018_10day_interval/subset_pet_masks_with_adt_1998-1999_lat14N-46N_lon166W-134W.npz.\nRead 12 samples from /home/chetana/ML_eddie/cds_ssh_2019_10day_interval/subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz.\nRead 24 samples from /home/chetana/ML_eddie/cds_ssh_1998-2018_10day_interval/subset_pet_masks_with_adt_1998-1999_lat14N-46N_lon166W-134W.npz.\nRead 12 samples from /home/chetana/ML_eddie/cds_ssh_2019_10day_interval/subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz.\nTotal number of pixels in training set: 0.39 megapixels across 24 SSH maps\nNumber of pixels that are not eddies: 0.28 megapixels (72.00%)\nNumber of pixels that are anticyclonic eddies: 0.06 megapixels (14.23%)\nNumber of pixels that are cyclonic eddies: 0.05 megapixels (13.77%)\n\n",
  "history_begin_time" : 1684261914455,
  "history_end_time" : 1684261974115,
  "history_notes" : null,
  "history_process" : "fsy61n",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "hy7zntztbbw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824576,
  "history_end_time" : 1684261974116,
  "history_notes" : null,
  "history_process" : "sq4sw3",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "pfjdtt2w0ap",
  "history_input" : "#  Generate compress segmentaiton mask\n\nimport logging\n\nfrom compression_and_segmentation_utils import *\n\n\ndata_root = os.path.join(os.path.expanduser(\"~\"), \"ML_eddies\")\ntrain_folder = os.path.join(data_root, \"cds_ssh_1998-2018_10day_interval\")\ntest_folder = os.path.join(data_root, \"cds_ssh_2019_10day_interval\")\n\nexample_file = os.path.join(test_folder, \"dt_global_twosat_phy_l4_20190110_vDT2021.nc\")\n\n# Generate segmentaion mask\n\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 1999), range(1, 3), [1, ], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 3), [1], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)\n\n# copress Segmentaion masks to npz files\nlon_range = (-166, -134)\nlat_range = (14, 46)\n\ntrain_subset = subset_arrays(\n    train_masks,\n    train_adt,\n    train_adt_filtered,\n    train_dates,\n    lon_range,\n    lat_range,\n    plot=False,\n    resolution_deg=0.25,\n    save_folder=train_folder,\n)\n\ntest_subset = subset_arrays(\n    test_masks,\n    test_adt,\n    test_adt_filtered,\n    test_dates,\n    lon_range,\n    lat_range,\n    plot=True,\n    resolution_deg=0.25,\n    save_folder=test_folder,\n)\n\n# compress segmask\nlon_range = (-166, -134)\nlat_range = (14, 46)\n\ntrain_subset = subset_arrays(\n    train_masks,\n    train_adt,\n    train_adt_filtered,\n    train_dates,\n    lon_range,\n    lat_range,\n    plot=False,\n    resolution_deg=0.25,\n    save_folder=train_folder,\n)\n\ntest_subset = subset_arrays(\n    test_masks,\n    test_adt,\n    test_adt_filtered,\n    test_dates,\n    lon_range,\n    lat_range,\n    plot=True,\n    resolution_deg=0.25,\n    save_folder=test_folder,\n)",
  "history_output" : "Found 2 files for 1998.\n/home/chetana/anaconda3/envs/ranjan/lib/python3.10/site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  arr.partition(\n/home/chetana/anaconda3/envs/ranjan/lib/python3.10/site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  arr.partition(\nSaved masks to /home/chetana/ML_eddies/cds_ssh_1998-2018_10day_interval/global_pet_masks_with_adt_1998.npz\nFound 2 files for 2019.\n/home/chetana/anaconda3/envs/ranjan/lib/python3.10/site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  arr.partition(\n/home/chetana/anaconda3/envs/ranjan/lib/python3.10/site-packages/numpy/lib/function_base.py:4650: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  arr.partition(\nSaved masks to /home/chetana/ML_eddies/cds_ssh_2019_10day_interval/global_pet_masks_with_adt_2019.npz\nSaved mask subset to /home/chetana/ML_eddies/cds_ssh_1998-2018_10day_interval/subset_pet_masks_with_adt_1998_lat14N-46N_lon166W-134W.npz\nSaved mask subset to /home/chetana/ML_eddies/cds_ssh_2019_10day_interval/subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz\nSaved mask subset to /home/chetana/ML_eddies/cds_ssh_1998-2018_10day_interval/subset_pet_masks_with_adt_1998_lat14N-46N_lon166W-134W.npz\nSaved mask subset to /home/chetana/ML_eddies/cds_ssh_2019_10day_interval/subset_pet_masks_with_adt_2019_lat14N-46N_lon166W-134W.npz\n",
  "history_begin_time" : 1684261848695,
  "history_end_time" : 1684261974117,
  "history_notes" : null,
  "history_process" : "shce7j",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "06mzev30f2i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824583,
  "history_end_time" : 1684261974118,
  "history_notes" : null,
  "history_process" : "g7a3zf",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "ascv02txczf",
  "history_input" : "from dependency import *\nfrom fetch_data_utils import *\n\n\nos.chdir(os.path.expanduser(\"~\"))\ncurrent_working_dir = os.getcwd()\nprint(current_working_dir)\n\n# Directory names\nroot_dir_name = \"ML_test\"\ntrain_dir_name = \"cds_ssh_1998-2018_10day_interval\"\ntest_dir_name = \"cds_ssh_2019_10day_interval\"\n\n# Build dir paths\nroot_path = os.path.join(current_working_dir, root_dir_name)\ntrain_path = os.path.join(root_path, train_dir_name)\ntest_path= os.path.join(root_path, test_dir_name)\n\n# Check if dir exists\nis_root_dir_exists = os.path.exists(root_path)\nis_train_dir_exists = os.path.exists(train_path)\nis_test_dir_exists = os.path.exists(test_path)\n\n\ndef create_directory(directory_name):\n    try:\n        os.mkdir(directory_name)\n        logger.info(\"Successfully created folder\")\n    except:\n        logger.error(\"Something went wrong while creating folder\")\n\n\n\nif is_root_dir_exists != True:\n    print(root_path)\n    create_directory(root_path)\n    print(\"created:\",root_path)\n    create_directory(train_path)\n    create_directory(test_path)\n    train_file, test_file = download_data()\n\n    unzip_file( os.path.join(current_working_dir,train_file), train_path)\n    unzip_file( os.path.join(current_working_dir,test_file), test_path)\n\n\nif is_root_dir_exists and is_train_dir_exists != True:\n    create_directory(\"cds_ssh_1998-2018_10day_interval\")\n    train_file = download_train_data()\n    unzip_file( os.path.join(current_working_dir,train_file), train_path)\n\nif  is_root_dir_exists and is_test_dir_exists != True:\n    create_directory(\"cds_ssh_2019_10day_interval\")\n    test_file = download_test_data()\n    unzip_file( os.path.join(current_working_dir,test_file), test_path)\n\n",
  "history_output" : "/home/chetana\nSuccessfully created folder\n2023-05-16 18:30:45,573 INFO Welcome to the CDS\n2023-05-16 18:30:45,573 INFO Sending request to https://cds.climate.copernicus.eu/api/v2/resources/satellite-sea-level-global\n2023-05-16 18:30:45,719 INFO Request is queued\n2023-05-16 18:30:46,836 INFO Request is failed\n2023-05-16 18:30:46,836 ERROR Message: the request you have submitted is not valid\n2023-05-16 18:30:46,836 ERROR Reason:  Value 'all' not valid for parameter 'variable', valid values are: daily, monthly_mean\n2023-05-16 18:30:46,836 ERROR   Traceback (most recent call last):\n2023-05-16 18:30:46,836 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,836 ERROR       result = handle_locally()\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,837 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 383, in handle_exception\n2023-05-16 18:30:46,837 ERROR       raise exception\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,837 ERROR       result = handle_locally()\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,837 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 365, in handle_exception\n2023-05-16 18:30:46,837 ERROR       raise exception\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,837 ERROR       result = handle_locally()\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,837 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 406, in handle_exception\n2023-05-16 18:30:46,837 ERROR       raise exception\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,837 ERROR       result = handle_locally()\n2023-05-16 18:30:46,837 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,837 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 132, in handle_exception\n2023-05-16 18:30:46,838 ERROR       raise exception\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,838 ERROR       result = handle_locally()\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,838 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 132, in handle_exception\n2023-05-16 18:30:46,838 ERROR       raise exception\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,838 ERROR       result = handle_locally()\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,838 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 132, in handle_exception\n2023-05-16 18:30:46,838 ERROR       raise exception\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,838 ERROR       result = handle_locally()\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 252, in <lambda>\n2023-05-16 18:30:46,838 ERROR       lambda: self.handle_exception(context, e),\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 132, in handle_exception\n2023-05-16 18:30:46,838 ERROR       raise exception\n2023-05-16 18:30:46,838 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 163, in _consume\n2023-05-16 18:30:46,838 ERROR       result = handle_locally()\n2023-05-16 18:30:46,839 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/dispatcher.py\", line 210, in <lambda>\n2023-05-16 18:30:46,839 ERROR       lambda: self.handle_request(context, request_data),\n2023-05-16 18:30:46,839 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/constraintsprocessor.py\", line 46, in handle_request\n2023-05-16 18:30:46,839 ERROR       constraint_type_strict)\n2023-05-16 18:30:46,839 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/constraintsengines/constraintsengine.py\", line 66, in run\n2023-05-16 18:30:46,839 ERROR       self._check_request_validity(cdsinf, request_params, constraints, constraint_type_strict)\n2023-05-16 18:30:46,839 ERROR     File \"/opt/cds/cdsinf/python/lib/cdsinf/runner/constraintsengines/constraintsengine.py\", line 162, in _check_request_validity\n2023-05-16 18:30:46,839 ERROR       \"http://copernicus-climate.eu/exc/constraints-bad-params\")\n2023-05-16 18:30:46,839 ERROR   cdsinf.exceptions.BadRequestException: Value 'all' not valid for parameter 'variable', valid values are: daily, monthly_mean\nSomething went wrong while downloading training data\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/ascv02txczf/download_and_unzip_data.py\", line 49, in <module>\n    unzip_file( os.path.join(current_working_dir,train_file), train_path)\n  File \"/home/chetana/anaconda3/envs/ranjan/lib/python3.10/posixpath.py\", line 90, in join\n    genericpath._check_arg_types('join', a, *p)\n  File \"/home/chetana/anaconda3/envs/ranjan/lib/python3.10/genericpath.py\", line 152, in _check_arg_types\n    raise TypeError(f'{funcname}() argument must be str, bytes, or '\nTypeError: join() argument must be str, bytes, or os.PathLike object, not 'NoneType'\n",
  "history_begin_time" : 1684261825517,
  "history_end_time" : 1684261974118,
  "history_notes" : null,
  "history_process" : "dhjb5i",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
},{
  "history_id" : "1htsrz071wj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1684261824590,
  "history_end_time" : 1684261974119,
  "history_notes" : null,
  "history_process" : "f6bwfv",
  "host_id" : "c2lqcn",
  "indicator" : "Stopped"
}]
